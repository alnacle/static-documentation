{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Amadeus for Developers Guides This is the official Amadeus for Developer documentation reference, but there are more resources out there that might help you in your journey of using the APIs. Check them out! You can find all APIs reference and swaggers in our API catalogue . Don\u2019t forget to stop by our GitHub workspace where you can find tons of samples and prototypes to get inspiration, as well as the latest version of the SDKs. If you are a happy postman user, as we are, feel free to use the Amadeus for Developers postman collection . Important Something not clear? Typos? We would be happy to receive your pull requests and feedback to this documentation guides. Feel free to contribute! Happy coding! The Amadeus for Developers Team","title":"Home"},{"location":"#amadeus-for-developers-guides","text":"This is the official Amadeus for Developer documentation reference, but there are more resources out there that might help you in your journey of using the APIs. Check them out! You can find all APIs reference and swaggers in our API catalogue . Don\u2019t forget to stop by our GitHub workspace where you can find tons of samples and prototypes to get inspiration, as well as the latest version of the SDKs. If you are a happy postman user, as we are, feel free to use the Amadeus for Developers postman collection . Important Something not clear? Typos? We would be happy to receive your pull requests and feedback to this documentation guides. Feel free to contribute! Happy coding! The Amadeus for Developers Team","title":"Amadeus for Developers Guides"},{"location":"get-started/first-api-call/","text":"Making your first API call Step 1: Create an account The first step to start using Amadeus Self-Service APIs is to register and create an account: In the top right corner of the page, click on register Complete the form, using a valid email address and click on the Create account button. An automatic confirmation email will be sent to the email address you registered In the confirmation email you receive, click on Confirm my account You can now log in to the portal with your new credentials! Welcome to Amadeus for Developers ! Step 2: Get your API key To start using the APIs you need to tell the system that you are allowed to do so. This process is called authentication. Danger Remember that the API Key and API Secret are for personal use only. Do not share them with anyone. All you need to do is to attach an alphanumeric string called token to your calls. This token will identify you as valid user and is generated from two parameters: API Key and API Secret . In order to get them, and once your account has been verified, you can sign in and follow these steps: Click on your username (top right corner) Go to My Self-Service Workspace Click on Create New App button Enter your application details and click on Create Important Test environment At this stage you are using the testing environment, where you will enjoy a fixed free number of free API call quota per month for all your applications. When you reach the limit, you will receive an error message. Use this limited data collection to prototype your app and get ready for launching it to the market. Step 3: calling the API For our first call, let's get a list of possible destinations from Paris for a maximum amount of 200 EUR using the Flight Inspiration Search API , which returns a list of destinations from a given origin along with the cheapest price for each one. Creating the Request Before making your first API call, you need to get your access token . For security purposes we implemented the oauth2 process that will give you your access token based on your API Key and API Secret. In order to retrieve the token, the we need to send a POST request to the following endpoint /v1/security/oauth2/token, with the correct Content-Type header and body: curl \"https://test.api.amadeus.com/v1/security/oauth2/token\" \\ -H \"Content-Type: application/x-www-form-urlencoded\" \\ -d \"grant_type=client_credentials&client_id={client_id}&client_secret={client_secret}\" Warning Please take a look at our Authorization guide to understand how the process works in deep. The documentation says you need to use v1/shopping/flight-destinations as endpoint followed by the mandatory parameter origin . As you want to filter the offers to those cheaper than 200 EUR, you need to add the maxPrice parameter as well. Our call is therefore: curl 'https://test.api.amadeus.com/v1/shopping/flight-destinations?origin=PAR&maxPrice=200' \\ -H 'Authorization: Bearer ABCDEFGH12345' Note how we add the Authorization header to the request with value Bearer string concatenated with the token previously requested. Evaluating the Response The response returns a JSON object containing a list of destinations matching our criteria: { \"data\" : [ { \"type\" : \"flight-destination\" , \"origin\" : \"PAR\" , \"destination\" : \"CAS\" , \"departureDate\" : \"2019-01-06\" , \"returnDate\" : \"2019-01-11\" , \"price\" : { \"total\" : \"161.90\" } }, { \"type\" : \"flight-destination\" , \"origin\" : \"PAR\" , \"destination\" : \"AYT\" , \"departureDate\" : \"2018-10-16\" , \"returnDate\" : \"2018-10-31\" , \"price\" : { \"total\" : \"181.50\" } } ] } Congratulations! You have just made your first Amadeus for Developers API call!","title":"Making your first API call"},{"location":"get-started/first-api-call/#making-your-first-api-call","text":"","title":"Making your first API call"},{"location":"get-started/first-api-call/#step-1-create-an-account","text":"The first step to start using Amadeus Self-Service APIs is to register and create an account: In the top right corner of the page, click on register Complete the form, using a valid email address and click on the Create account button. An automatic confirmation email will be sent to the email address you registered In the confirmation email you receive, click on Confirm my account You can now log in to the portal with your new credentials! Welcome to Amadeus for Developers !","title":"Step 1: Create an account"},{"location":"get-started/first-api-call/#step-2-get-your-api-key","text":"To start using the APIs you need to tell the system that you are allowed to do so. This process is called authentication. Danger Remember that the API Key and API Secret are for personal use only. Do not share them with anyone. All you need to do is to attach an alphanumeric string called token to your calls. This token will identify you as valid user and is generated from two parameters: API Key and API Secret . In order to get them, and once your account has been verified, you can sign in and follow these steps: Click on your username (top right corner) Go to My Self-Service Workspace Click on Create New App button Enter your application details and click on Create Important Test environment At this stage you are using the testing environment, where you will enjoy a fixed free number of free API call quota per month for all your applications. When you reach the limit, you will receive an error message. Use this limited data collection to prototype your app and get ready for launching it to the market.","title":"Step 2: Get your API key"},{"location":"get-started/first-api-call/#step-3-calling-the-api","text":"For our first call, let's get a list of possible destinations from Paris for a maximum amount of 200 EUR using the Flight Inspiration Search API , which returns a list of destinations from a given origin along with the cheapest price for each one.","title":"Step 3: calling the API"},{"location":"get-started/first-api-call/#creating-the-request","text":"Before making your first API call, you need to get your access token . For security purposes we implemented the oauth2 process that will give you your access token based on your API Key and API Secret. In order to retrieve the token, the we need to send a POST request to the following endpoint /v1/security/oauth2/token, with the correct Content-Type header and body: curl \"https://test.api.amadeus.com/v1/security/oauth2/token\" \\ -H \"Content-Type: application/x-www-form-urlencoded\" \\ -d \"grant_type=client_credentials&client_id={client_id}&client_secret={client_secret}\" Warning Please take a look at our Authorization guide to understand how the process works in deep. The documentation says you need to use v1/shopping/flight-destinations as endpoint followed by the mandatory parameter origin . As you want to filter the offers to those cheaper than 200 EUR, you need to add the maxPrice parameter as well. Our call is therefore: curl 'https://test.api.amadeus.com/v1/shopping/flight-destinations?origin=PAR&maxPrice=200' \\ -H 'Authorization: Bearer ABCDEFGH12345' Note how we add the Authorization header to the request with value Bearer string concatenated with the token previously requested.","title":"Creating the Request"},{"location":"get-started/first-api-call/#evaluating-the-response","text":"The response returns a JSON object containing a list of destinations matching our criteria: { \"data\" : [ { \"type\" : \"flight-destination\" , \"origin\" : \"PAR\" , \"destination\" : \"CAS\" , \"departureDate\" : \"2019-01-06\" , \"returnDate\" : \"2019-01-11\" , \"price\" : { \"total\" : \"161.90\" } }, { \"type\" : \"flight-destination\" , \"origin\" : \"PAR\" , \"destination\" : \"AYT\" , \"departureDate\" : \"2018-10-16\" , \"returnDate\" : \"2018-10-31\" , \"price\" : { \"total\" : \"181.50\" } } ] } Congratulations! You have just made your first Amadeus for Developers API call!","title":"Evaluating the Response"},{"location":"get-started/moving-to-production/","text":"Moving to production Once you feel that your application is ready to be deployed to the Real World\u2122, you will want to move it to Production Environment. Requesting the production keys Moving your application to Production Environment means requesting a production key , but don't be scared! The process is very straight forward: Sign in to your account Click on your username (top right corner) Go to My Self-Service Workspace Select the application that you want to move to Production and click on Get Production environment button: Moving to production environment involves 3 steps: Information about you and your app Payment information (credit card or bank transfer) Signing the terms and conditions (via DocuSign ) Once you have completed the steps above, you will receive a copy of your contract by email. At this point your application's status will show pending : Once your application is validated you will be notified and the application's status will change to live : Information Please note that the process can take up to 72 hours for your first application. Additional applications will not require any waiting time. Remember that once you reach the threshold of free transactions, you will automatically be billed on a monthly basis, for each transaction. You can easily manage and track your app usage in My Self-Service Workspace . Using the new production keys Once you get your production key, you will need to change your source code: Replace the base URL for your API calls to point to https://api.amadeus.com instead of https://test.api.amadeus.com Change your API key and API secret with your new production keys. If you are using our SDKs , just initialise the client as follows: Python amadeus = Client ( client_id = 'YOUR_PRODUCTION_CLIENT_ID' , client_secret = 'YOUR_PRODUCTION_CLIENT_SECRET' , hostname = 'production' ) Java package flightsearch ; public class FlightSearch { public static void main ( String [] args ) { System . out . println ( \"Hello World\" ); } } Ruby #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Swift using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( \"Hello world!\" ); } } Congrats ! \ud83c\udf89 Your application is ready to disrupt the travel industry!","title":"Moving to Production"},{"location":"get-started/moving-to-production/#moving-to-production","text":"Once you feel that your application is ready to be deployed to the Real World\u2122, you will want to move it to Production Environment.","title":"Moving to production"},{"location":"get-started/moving-to-production/#requesting-the-production-keys","text":"Moving your application to Production Environment means requesting a production key , but don't be scared! The process is very straight forward: Sign in to your account Click on your username (top right corner) Go to My Self-Service Workspace Select the application that you want to move to Production and click on Get Production environment button: Moving to production environment involves 3 steps: Information about you and your app Payment information (credit card or bank transfer) Signing the terms and conditions (via DocuSign ) Once you have completed the steps above, you will receive a copy of your contract by email. At this point your application's status will show pending : Once your application is validated you will be notified and the application's status will change to live : Information Please note that the process can take up to 72 hours for your first application. Additional applications will not require any waiting time. Remember that once you reach the threshold of free transactions, you will automatically be billed on a monthly basis, for each transaction. You can easily manage and track your app usage in My Self-Service Workspace .","title":"Requesting the production keys"},{"location":"get-started/moving-to-production/#using-the-new-production-keys","text":"Once you get your production key, you will need to change your source code: Replace the base URL for your API calls to point to https://api.amadeus.com instead of https://test.api.amadeus.com Change your API key and API secret with your new production keys. If you are using our SDKs , just initialise the client as follows: Python amadeus = Client ( client_id = 'YOUR_PRODUCTION_CLIENT_ID' , client_secret = 'YOUR_PRODUCTION_CLIENT_SECRET' , hostname = 'production' ) Java package flightsearch ; public class FlightSearch { public static void main ( String [] args ) { System . out . println ( \"Hello World\" ); } } Ruby #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Swift using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( \"Hello world!\" ); } } Congrats ! \ud83c\udf89 Your application is ready to disrupt the travel industry!","title":"Using the new production keys"},{"location":"get-started/self-service-enterprise/","text":"Self Service vs Enterprise Amadeus for Developers includes two different offers: Self-Service and Enterprise, each meeting different customer needs. Self-Service Targets independent developers and start-ups that wish to connect to Amadeus APIs in a quick and easy manner. You can access and start to test these new REST/JSON APIs in less than 3 minutes, and get quick access to production data with a flexible pay-as-you-go pricing model. Please note that the catalog includes some selected APIs, although we will be constantly releasing new APIs. Self-Service users have at their disposal detailed documentation, guides and SDKs, to help them solve any doubts they may have. Enterprise Provides access to the full Amadeus APIs catalog, tailored to companies with scale needs and leading brands in the travel industry. Customers of Enterprise APIs receive dedicated support from their account managers and enjoy a customized pricing scheme to meet their needs. Please note that access to Enterprise APIs is only granted on a request basis, and some special requirements may apply. Warning You can potentially use APIs from both catalogs, but please keep in mind that the requirements and conditions of each offer are very different!","title":"Self-Service vs Enterprise"},{"location":"get-started/self-service-enterprise/#self-service-vs-enterprise","text":"Amadeus for Developers includes two different offers: Self-Service and Enterprise, each meeting different customer needs.","title":"Self Service vs Enterprise"},{"location":"get-started/self-service-enterprise/#self-service","text":"Targets independent developers and start-ups that wish to connect to Amadeus APIs in a quick and easy manner. You can access and start to test these new REST/JSON APIs in less than 3 minutes, and get quick access to production data with a flexible pay-as-you-go pricing model. Please note that the catalog includes some selected APIs, although we will be constantly releasing new APIs. Self-Service users have at their disposal detailed documentation, guides and SDKs, to help them solve any doubts they may have.","title":"Self-Service"},{"location":"get-started/self-service-enterprise/#enterprise","text":"Provides access to the full Amadeus APIs catalog, tailored to companies with scale needs and leading brands in the travel industry. Customers of Enterprise APIs receive dedicated support from their account managers and enjoy a customized pricing scheme to meet their needs. Please note that access to Enterprise APIs is only granted on a request basis, and some special requirements may apply. Warning You can potentially use APIs from both catalogs, but please keep in mind that the requirements and conditions of each offer are very different!","title":"Enterprise"},{"location":"guides/api-data-collection/","text":"Testing Data Collection The test environment is designed for testing purposes only, thus the data provided under this environment is limited. Under Test Environment the APIs use the following data collections: Air Flight Inspiration Search and Flight Cheapest Date Search contain the following list of origin and destinations Flight Most Booked and Traveled Destinations and Flight Busiest Traveling Period contain the following list of origin and destinations . Flight Check-in Links contains the following valid airlines . Airport Nearest Relevant & Airport & City Search contain data from United States, Spain, United Kingdom, Germany and India. Airline Code Lookup contains almost all airlines. Flight Choice Prediction , Flight Delay Prediction and Airport On-time Performance APIs have no data restrictions in test. Hotel The content of Hotel Search comes directly from the hotel providers, so the content might change dynamically. For your test, use big cities like LON (London) or NYC (New-York). The following table contains a list of valid hotel chains for Hotel Search . Hotel Ratings offers 24 hotels in the test environment: 10 in London and 14 in New-York. You can find the list here . Destination Content Points Of Interest and Safe Place APIs contain data for the following cities in test. Trip Trip Purpose Prediction and AI-generated Photos APIs have no data restrictions in test.","title":"Data Collection"},{"location":"guides/api-data-collection/#testing-data-collection","text":"The test environment is designed for testing purposes only, thus the data provided under this environment is limited. Under Test Environment the APIs use the following data collections:","title":"Testing Data Collection"},{"location":"guides/api-data-collection/#air","text":"Flight Inspiration Search and Flight Cheapest Date Search contain the following list of origin and destinations Flight Most Booked and Traveled Destinations and Flight Busiest Traveling Period contain the following list of origin and destinations . Flight Check-in Links contains the following valid airlines . Airport Nearest Relevant & Airport & City Search contain data from United States, Spain, United Kingdom, Germany and India. Airline Code Lookup contains almost all airlines. Flight Choice Prediction , Flight Delay Prediction and Airport On-time Performance APIs have no data restrictions in test.","title":"Air"},{"location":"guides/api-data-collection/#hotel","text":"The content of Hotel Search comes directly from the hotel providers, so the content might change dynamically. For your test, use big cities like LON (London) or NYC (New-York). The following table contains a list of valid hotel chains for Hotel Search . Hotel Ratings offers 24 hotels in the test environment: 10 in London and 14 in New-York. You can find the list here .","title":"Hotel"},{"location":"guides/api-data-collection/#destination-content","text":"Points Of Interest and Safe Place APIs contain data for the following cities in test.","title":"Destination Content"},{"location":"guides/api-data-collection/#trip","text":"Trip Purpose Prediction and AI-generated Photos APIs have no data restrictions in test.","title":"Trip"},{"location":"guides/api-rate-limits/","text":"Rate Limits Most of the Amadeus for Developers APIs have rate limits in place in order to prevent abuse by third-party services or users. Depending on the environment, the rate limits for the API calls are: Testing Production 10 transactions per second per user 20 transactions per second per user No more than 1 request every 100 ms. No more than 1 request every 50 ms.","title":"Rate Limits"},{"location":"guides/api-rate-limits/#rate-limits","text":"Most of the Amadeus for Developers APIs have rate limits in place in order to prevent abuse by third-party services or users. Depending on the environment, the rate limits for the API calls are: Testing Production 10 transactions per second per user 20 transactions per second per user No more than 1 request every 100 ms. No more than 1 request every 50 ms.","title":"Rate Limits"},{"location":"guides/authorization/","text":"Authorization In the following guide you will learn how to perform the authorization needed to access all our APIs. The basic steps are: Open an account on the Amadeus for Developers portal Create an app Get your API Key and API Secret Make a call to our authorization server to get an access token Call the APIs you want using the access token Warning Please make sure that you do not share your API Key and your API Secret as these are strictly private. Introduction to OAuth OAuth is a protocol that enables a token-based workflow, which is more secure than basic authentication. It provides a way to ensure that a specific user has permissions to access services and resources. OAuth uses access tokens for accessing APIs. A token represents a permission granted to a client to access some protected resources. The method to acquire a token is called grant . There are different types of OAuth grants. Amadeus for Developers uses the Client Credentials Grant . Authorization Flow Requesting a Token To request an access token you need to send a POST request with the following body parameters to the authorization server: grant_type with the value client_credentials client_id with your API Key . client_secret with your API Secret . There are different content types to send information via POST to the server. Our authorization request will be encoded as x-www-form-urlencoded , where the keys and values are encoded in key-value tuples separated by '&', with a '=' between the key and the value. Information Remember that both API Key and API Secret were provided to you when you created your application in the portal. Let's use cURL to request a new token. We need to send a POST request to the following endpoint /v1/security/oauth2/token . Note that there is no need to specify the -X POST parameter as we are sending a body, cURL automatically prepares the POST . As mentioned, we need to specify the type of the request using the content-type HTTP header set to application/x-www-form-urlencoded . curl \"https://test.api.amadeus.com/v1/security/oauth2/token\" \\ -H \"Content-Type: application/x-www-form-urlencoded\" \\ -d \"grant_type=client_credentials&client_id={client_id}&client_secret={client_secret}\" Understanding the Response The authorization server will respond with a JSON object containing the following properties: type set to amadeusOAuth2Token string. username your username (email address). application_name the name of your application. client_id your API Key (same as the one used in the request). token_type with the value Bearer . access_token your authorization token. expires_in an integer representing the expiration time (in seconds) of the given token. state with the value approved The response will contain the newly generated access_token which you can use to access all resources. { \"type\" : \"amadeusOAuth2Token\" , \"username\" : \"foo@bar.com\" , \"application_name\" : \"BetaTest_foobar\" , \"client_id\" : \"3sY9VNvXIjyJYd5mmOtOzJLuL1BzJBBp\" , \"token_type\" : \"Bearer\" , \"access_token\" : \"CpjU0sEenniHCgPDrndzOSWFk5mN\" , \"expires_in\" : 1799 , \"state\" : \"approved\" , \"scope\" : \"\" } Using the Token Once the token has been retrieved you are ready to perform your API calls. To get access to the API you want, you need to add the authorization header to your request with the value Bearer {access_token} , where acess_token is the token you have just retrieved. You can then call, for example, the Check-in Links API to retrieve the check-in URL for Iberia ( IB ): curl \"https://test.api.amadeus.com/v2/reference-data/urls/checkin-links?airline=1X\" \\ -H \"Authorization: Bearer CpjU0sEenniHCgPDrndzOSWFk5mN\" { \"data\" : [ { \"type\" : \"checkin-link\" , \"id\" : \"1XEN-GBWeb\" , \"href\" : \"https://www.onex.com/manage/check-in\" , \"channel\" : \"Web\" } ] } Although cURL helps to understand how authorization works, we highly recommend you use our Amadeus for Developers SDKs . The SDKs abstract all the complexity of the implementation for you. This is how you can initialize the client and authenticate with the Node SDK: var Amadeus = require ( 'amadeus' ); var amadeus = new Amadeus ({ clientId : '[API Key]' , clientSecret : '[API Secret]' }); The SDK fetches and stores the access_token and then sets all the headers automatically in all API calls. You can then call for example the Flight Check-in Links API: amadeus . referenceData . urls . checkinLinks . get ({ airline : 'IB' });","title":"Authorization"},{"location":"guides/authorization/#authorization","text":"In the following guide you will learn how to perform the authorization needed to access all our APIs. The basic steps are: Open an account on the Amadeus for Developers portal Create an app Get your API Key and API Secret Make a call to our authorization server to get an access token Call the APIs you want using the access token Warning Please make sure that you do not share your API Key and your API Secret as these are strictly private.","title":"Authorization"},{"location":"guides/authorization/#introduction-to-oauth","text":"OAuth is a protocol that enables a token-based workflow, which is more secure than basic authentication. It provides a way to ensure that a specific user has permissions to access services and resources. OAuth uses access tokens for accessing APIs. A token represents a permission granted to a client to access some protected resources. The method to acquire a token is called grant . There are different types of OAuth grants. Amadeus for Developers uses the Client Credentials Grant .","title":"Introduction to OAuth"},{"location":"guides/authorization/#authorization-flow","text":"","title":"Authorization Flow"},{"location":"guides/authorization/#requesting-a-token","text":"To request an access token you need to send a POST request with the following body parameters to the authorization server: grant_type with the value client_credentials client_id with your API Key . client_secret with your API Secret . There are different content types to send information via POST to the server. Our authorization request will be encoded as x-www-form-urlencoded , where the keys and values are encoded in key-value tuples separated by '&', with a '=' between the key and the value. Information Remember that both API Key and API Secret were provided to you when you created your application in the portal. Let's use cURL to request a new token. We need to send a POST request to the following endpoint /v1/security/oauth2/token . Note that there is no need to specify the -X POST parameter as we are sending a body, cURL automatically prepares the POST . As mentioned, we need to specify the type of the request using the content-type HTTP header set to application/x-www-form-urlencoded . curl \"https://test.api.amadeus.com/v1/security/oauth2/token\" \\ -H \"Content-Type: application/x-www-form-urlencoded\" \\ -d \"grant_type=client_credentials&client_id={client_id}&client_secret={client_secret}\"","title":"Requesting a Token"},{"location":"guides/authorization/#understanding-the-response","text":"The authorization server will respond with a JSON object containing the following properties: type set to amadeusOAuth2Token string. username your username (email address). application_name the name of your application. client_id your API Key (same as the one used in the request). token_type with the value Bearer . access_token your authorization token. expires_in an integer representing the expiration time (in seconds) of the given token. state with the value approved The response will contain the newly generated access_token which you can use to access all resources. { \"type\" : \"amadeusOAuth2Token\" , \"username\" : \"foo@bar.com\" , \"application_name\" : \"BetaTest_foobar\" , \"client_id\" : \"3sY9VNvXIjyJYd5mmOtOzJLuL1BzJBBp\" , \"token_type\" : \"Bearer\" , \"access_token\" : \"CpjU0sEenniHCgPDrndzOSWFk5mN\" , \"expires_in\" : 1799 , \"state\" : \"approved\" , \"scope\" : \"\" }","title":"Understanding the Response"},{"location":"guides/authorization/#using-the-token","text":"Once the token has been retrieved you are ready to perform your API calls. To get access to the API you want, you need to add the authorization header to your request with the value Bearer {access_token} , where acess_token is the token you have just retrieved. You can then call, for example, the Check-in Links API to retrieve the check-in URL for Iberia ( IB ): curl \"https://test.api.amadeus.com/v2/reference-data/urls/checkin-links?airline=1X\" \\ -H \"Authorization: Bearer CpjU0sEenniHCgPDrndzOSWFk5mN\" { \"data\" : [ { \"type\" : \"checkin-link\" , \"id\" : \"1XEN-GBWeb\" , \"href\" : \"https://www.onex.com/manage/check-in\" , \"channel\" : \"Web\" } ] } Although cURL helps to understand how authorization works, we highly recommend you use our Amadeus for Developers SDKs . The SDKs abstract all the complexity of the implementation for you. This is how you can initialize the client and authenticate with the Node SDK: var Amadeus = require ( 'amadeus' ); var amadeus = new Amadeus ({ clientId : '[API Key]' , clientSecret : '[API Secret]' }); The SDK fetches and stores the access_token and then sets all the headers automatically in all API calls. You can then call for example the Flight Check-in Links API: amadeus . referenceData . urls . checkinLinks . get ({ airline : 'IB' });","title":"Using the Token"},{"location":"guides/pagination/","text":"Pagination Sometimes, when you\u2019re making calls to the Amadeus for Developers REST APIs, there will be a lot of results to return. Let\u2019s say your initial call is asking for all the flight offers using the Flight Offers Search API ; the result could be a massive response with hundreds of pages. Don\u2019t panic. Pagination comes to the rescue, splitting the results into different pages to make sure responses are easier to handle. Warning Please be aware that no all APIs support pagination. Don't forget to check the API reference! Accessing the paginated results Using the SDKs If you are using any of our SDKs , accessing the paginated results is very simple. If an API endpoint supports pagination, the other pages are available under the .next , .previous , .last and .first methods. Let's see the following example written on node : amadeus . referenceData . locations . get ({ keyword : 'LON' , subType : 'AIRPORT,CITY' }). then ( function ( response ){ console . log ( response . data ); // first page return amadeus . next ( response ); }). then ( function ( nextReponse ){ console . log ( nextReponse . data ); // second page }); If a page is not available, the response will resolve to null . The same approach is valid for other languages, such as Ruby : response = amadeus . reference_data . locations . get ( keyword : 'LON' , subType : Amadeus :: Location :: ANY ) amadeus . next ( response ) #=> returns a new response for the next page In this case, the method will return nil in case we try to reach a non existing page. Manually parsing the response The response received from the server, will contain the following JSON content: { \"meta\" : { \"count\" : 28 , \"links\" : { \"self\" : \"https://api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55\" , \"next\" : \"https://test.api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55&page%5Boffset%5D=10\" , \"last\" : \"https://test.api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55&page%5Boffset%5D=18\" } }, \"data\" : [ { /* large amount of items */ } ] } Accessing the page of the results means to access the meta/links/next or meta/links/last node within the JSON response. Note that indexing elements between pages is done via page[offset] query parameter, such as page[offset]=18 . The next and last returned on the example, encodes the special characters [] as %5B and %5D . This is called percent encoding and is used in encoding special characters in the url parameter values.","title":"Pagination"},{"location":"guides/pagination/#pagination","text":"Sometimes, when you\u2019re making calls to the Amadeus for Developers REST APIs, there will be a lot of results to return. Let\u2019s say your initial call is asking for all the flight offers using the Flight Offers Search API ; the result could be a massive response with hundreds of pages. Don\u2019t panic. Pagination comes to the rescue, splitting the results into different pages to make sure responses are easier to handle. Warning Please be aware that no all APIs support pagination. Don't forget to check the API reference!","title":"Pagination"},{"location":"guides/pagination/#accessing-the-paginated-results","text":"","title":"Accessing the paginated results"},{"location":"guides/pagination/#using-the-sdks","text":"If you are using any of our SDKs , accessing the paginated results is very simple. If an API endpoint supports pagination, the other pages are available under the .next , .previous , .last and .first methods. Let's see the following example written on node : amadeus . referenceData . locations . get ({ keyword : 'LON' , subType : 'AIRPORT,CITY' }). then ( function ( response ){ console . log ( response . data ); // first page return amadeus . next ( response ); }). then ( function ( nextReponse ){ console . log ( nextReponse . data ); // second page }); If a page is not available, the response will resolve to null . The same approach is valid for other languages, such as Ruby : response = amadeus . reference_data . locations . get ( keyword : 'LON' , subType : Amadeus :: Location :: ANY ) amadeus . next ( response ) #=> returns a new response for the next page In this case, the method will return nil in case we try to reach a non existing page.","title":"Using the SDKs"},{"location":"guides/pagination/#manually-parsing-the-response","text":"The response received from the server, will contain the following JSON content: { \"meta\" : { \"count\" : 28 , \"links\" : { \"self\" : \"https://api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55\" , \"next\" : \"https://test.api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55&page%5Boffset%5D=10\" , \"last\" : \"https://test.api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55&page%5Boffset%5D=18\" } }, \"data\" : [ { /* large amount of items */ } ] } Accessing the page of the results means to access the meta/links/next or meta/links/last node within the JSON response. Note that indexing elements between pages is done via page[offset] query parameter, such as page[offset]=18 . The next and last returned on the example, encodes the special characters [] as %5B and %5D . This is called percent encoding and is used in encoding special characters in the url parameter values.","title":"Manually parsing the response"},{"location":"guides/permissions-and-errors/","text":"Permissions and Errors The Amadeus for Developers APIs use HTTP status codes to communicate if a request has been successfully processed or not. Types of Errors There two main types of errors depending on which side of the flow happen: Client: typically when the request has not been properly built. We can debug and fix. Server: when something happened on the server side and has to be reported. Client Errors If your API request is invalid you will receive a Client Error response from the system, with a HTTP 4xx status code. The body of the response will match the format defined in our swagger schema and generally provides more information on why the request was invalid. Authorization Errors 401 Invalid Token It usually happens when the access token provided in the Authorization header is no longer valid because it has already expired. In this particular case you would need to request a new access token. { \"errors\" : [ { \"code\" : 38190 , \"title\" : \"Invalid access token\" , \"detail\" : \"The access token provided in the Authorization header is invalid\" , \"status\" : 401 } ] } 400 Unsupported Grant Type When trying to use a grant type different than client credentials . Make sure you are following our authorization guide. { \"error\" : \"unsupported_grant_type\" , \"error_description\" : \"Only client_credentials value is allowed for the body parameter grant_type\" , \"code\" : 38187 , \"title\" : \"Invalid parameters\" } 401 Invalid consumer key The client credentials have invalid format and are not recognized. { \"error\" : \"invalid_client\" , \"error_description\" : \"Client credentials are invalid\" , \"code\" : 38187 , \"title\" : \"Invalid parameters\" } Data Format Errors 400 Location format The location parameter is expected to use IATA standard. { \"errors\" : [ { \"status\" : 400 , \"code\" : 477 , \"title\" : \"INVALID FORMAT\" , \"detail\" : \"City/Airport - 3 characters [IATA code](https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code) from which the traveler will depart.\" , \"source\" : { \"parameter\" : \"origin\" } } ] } 400 Collapse source format { \"errors\" : [ { \"status\" : 400 , \"code\" : 4926 , \"title\" : \"INVALID DATA RECEIVED\" , \"detail\" : \"Past date/time not allowed\" , \"source\" : { \"parameter\" : \"departureDate/returnDate\" } } ] } Resource Errors 401 Resource not found The endpoint or URL does not exists. Probably you are trying to call a non existing endpoint. Make sure this endpoint is correctly spelled. { \"errors\" : [ { \"code\" : 38196 , \"title\" : \"Resource not found\" , \"detail\" : \"The targeted resource doesn't exist\" , \"status\" : 404 } ] } Server Errors If something went wrong during the execution of your request, you will receive a Server error in response from the system, with a HTTP 5xx status code. The body will again match the defined error format, allowing your application to easily read it and display an appropriate message to the client. It may also carry some debugging information which you can submit to us if you would like us to investigate the error further. The following example shows an internal server error: { \"errors\" : [ { \"code\" : 38189 , \"title\" : \"Internal error\" , \"detail\" : \"An internal error occured, please contact your administrator\" , \"status\" : 500 } ] }","title":"Permissions and errors"},{"location":"guides/permissions-and-errors/#permissions-and-errors","text":"The Amadeus for Developers APIs use HTTP status codes to communicate if a request has been successfully processed or not.","title":"Permissions and Errors"},{"location":"guides/permissions-and-errors/#types-of-errors","text":"There two main types of errors depending on which side of the flow happen: Client: typically when the request has not been properly built. We can debug and fix. Server: when something happened on the server side and has to be reported.","title":"Types of Errors"},{"location":"guides/permissions-and-errors/#client-errors","text":"If your API request is invalid you will receive a Client Error response from the system, with a HTTP 4xx status code. The body of the response will match the format defined in our swagger schema and generally provides more information on why the request was invalid.","title":"Client Errors"},{"location":"guides/permissions-and-errors/#authorization-errors","text":"401 Invalid Token It usually happens when the access token provided in the Authorization header is no longer valid because it has already expired. In this particular case you would need to request a new access token. { \"errors\" : [ { \"code\" : 38190 , \"title\" : \"Invalid access token\" , \"detail\" : \"The access token provided in the Authorization header is invalid\" , \"status\" : 401 } ] } 400 Unsupported Grant Type When trying to use a grant type different than client credentials . Make sure you are following our authorization guide. { \"error\" : \"unsupported_grant_type\" , \"error_description\" : \"Only client_credentials value is allowed for the body parameter grant_type\" , \"code\" : 38187 , \"title\" : \"Invalid parameters\" } 401 Invalid consumer key The client credentials have invalid format and are not recognized. { \"error\" : \"invalid_client\" , \"error_description\" : \"Client credentials are invalid\" , \"code\" : 38187 , \"title\" : \"Invalid parameters\" }","title":"Authorization Errors"},{"location":"guides/permissions-and-errors/#data-format-errors","text":"400 Location format The location parameter is expected to use IATA standard. { \"errors\" : [ { \"status\" : 400 , \"code\" : 477 , \"title\" : \"INVALID FORMAT\" , \"detail\" : \"City/Airport - 3 characters [IATA code](https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code) from which the traveler will depart.\" , \"source\" : { \"parameter\" : \"origin\" } } ] } 400 Collapse source format { \"errors\" : [ { \"status\" : 400 , \"code\" : 4926 , \"title\" : \"INVALID DATA RECEIVED\" , \"detail\" : \"Past date/time not allowed\" , \"source\" : { \"parameter\" : \"departureDate/returnDate\" } } ] }","title":"Data Format Errors"},{"location":"guides/permissions-and-errors/#resource-errors","text":"401 Resource not found The endpoint or URL does not exists. Probably you are trying to call a non existing endpoint. Make sure this endpoint is correctly spelled. { \"errors\" : [ { \"code\" : 38196 , \"title\" : \"Resource not found\" , \"detail\" : \"The targeted resource doesn't exist\" , \"status\" : 404 } ] }","title":"Resource Errors"},{"location":"guides/permissions-and-errors/#server-errors","text":"If something went wrong during the execution of your request, you will receive a Server error in response from the system, with a HTTP 5xx status code. The body will again match the defined error format, allowing your application to easily read it and display an appropriate message to the client. It may also carry some debugging information which you can submit to us if you would like us to investigate the error further. The following example shows an internal server error: { \"errors\" : [ { \"code\" : 38189 , \"title\" : \"Internal error\" , \"detail\" : \"An internal error occured, please contact your administrator\" , \"status\" : 500 } ] }","title":"Server Errors"},{"location":"resources/flights/","text":"Flights Searching Flights Inspirational Search The Flight Inspiration Search API provides a list of destinations from a given city that is ordered by price and can be filtered by departure date or maximum price. The following request, retrieves a list of destinations from Boston: curl https://api.amadeus.com/v1/shopping/flight-destinations?origin = BOS Information This API returns cached prices. Once a destination is chosen, use the Flight Offers Search API to get real-time pricing and availability. The API provides a link to Flight Offers Search to search for flights once a destination is chosen and a link to Flight Cheapest Date Search to check the cheapest dates to fly: \"data\" : [ { \"type\" : \"flight-destination\" , \"origin\" : \"BOS\" , \"destination\" : \"CHI\" , \"departureDate\" : \"2020-07-22\" , \"returnDate\" : \"2020-07-28\" , \"price\" : { \"total\" : \"52.18\" }, \"links\" : { \"flightDates\" : \"https://test.api.amadeus.com/v1/shopping/flight-dates?origin=BOS&destination=CHI&departureDate=2020-07-02,2020-12-28&oneWay=false&duration=1,15&nonStop=false&maxPrice=300&currency=USD&viewBy=DURATION\" , \"flightOffers\" : \"https://test.api.amadeus.com/v2/shopping/flight-offers?originLocationCode=BOS&destinationLocationCode=CHI&departureDate=2020-07-22&returnDate=2020-07-28&adults=1&nonStop=false&maxPrice=300&currency=USD\" } } ] Flexible Search on dates The Flight Cheapest Date Search API finds the cheapest dates to travel from one city to another. The API provides list of flight options with dates and prices, and allows you to order by price, departure date or duration. Information This API returns cached prices. Once the dates are chosen, use the Flight Offers Search API to get real-time pricing and availability. The following example retrieves a list of flight-date objects containing pricing information given the origin and destination, and a range of dates: curl https://api.amadeus.com/v1/shopping/flight-dates?origin = BOS & destination = CHI & departureDate = 2020 -08-15,2020-08-28 The API provides a link to Flight Offers Search to search for flights once a destination is chosen, in order to proceed with the booking flow. Offers Search The Flight Offers Search API searches over 500 airlines to find the cheapest flights for a given itinerary. The API lets you can search flights between two cities, perform multi-city searches for longer itineraries and access one-way combinable fares to offer the cheapest options possible. For each itinerary, the API provides a list of flight offers with prices, fare details, airline names, baggage allowances and departure terminals. Warning Flights from low-cost carriers and American Airlines are currently unavailable. The Flight Offers Search API starts the booking cycle with a search for the best fares. The API returns a list of the cheapest flights given a city/airport of departure, a city/airport of arrival, the number and type of passengers and travel dates. The results are complete with airline name and fares as well as additional information like bag allowance and pricing for additional baggage. The API comes in two flavors: Simple version: GET operation with few parameters but which is quicker to integrate. On steroids: POST operation offering the full functionalities of the API. The minimum GET request has following parameters: curl https://api.amadus.com/v2/shopping/flight-offers?adults = 1 & originLocationCode = BOS & destinationLocationCode = CHI & departureDate = 2020 -07-22 The API returns a list of flight-offer objects (up to 250), including information such as itineraries, price, pricing options, etc. \"data\" : [ { \"type\" : \"flight-offer\" , \"id\" : \"1\" , \"source\" : \"GDS\" , \"instantTicketingRequired\" : false , \"nonHomogeneous\" : false , \"oneWay\" : false , \"lastTicketingDate\" : \"2020-07-02\" , \"numberOfBookableSeats\" : 9 , \"itineraries\" : [ ], \"price\" : { \"currency\" : \"EUR\" , \"total\" : \"22.00\" , \"base\" : \"13.00\" , \"fees\" : [ { \"amount\" : \"0.00\" , \"type\" : \"SUPPLIER\" }, { \"amount\" : \"0.00\" , \"type\" : \"TICKETING\" } ], \"grandTotal\" : \"22.00\" } } ] Flight Offers Prediction The Flight Choice Prediction API predicts the flight your users will choose. Our machine-learning models have analyzed historical interactions with the Flight Low-Fare Search API and can determine each flight\u2019s probability of being chosen. Boost conversions and create a personalized experience by filtering out the noise and showing your users the flights which are best for them. Here is a quick cURL example piping Low fare search API results directly to the prediction API, stay tuned for SDK updates with more helpers! Let\u2019s look at flight offers for a Madrid-New York round trip (limiting to 4 options for this test illustration) curl --request GET \\ --header 'Authorization: Bearer <token>' \\ --url https://test.api.amadeus.com/v1/shopping/flight-offers \\? origin \\= MAD \\& destination \\= NYC \\& departureDate \\= 2019 -08-24 \\& returnDate \\= 2019 -09-19 \\& max \\= 4 \\ | curl --request POST \\ --header 'content-type: application/json' \\ --header 'Authorization: Bearer <token>' \\ --url https://test.api.amadeus.com/v1/shopping/flight-offers/prediction --data @- The prediction API returns the same content as Low Fare search with the addition of the choiceProbability field for each flight offer element { \"data\" : [ { \"choiceProbability\" : \"0.9437563627430908\" , \"id\" : \"1558602440311-352021104\" , \"offerItems\" : [ ... ], \"type\" : \"flight-offer\" }, { \"choiceProbability\" : \"0.0562028823257711\" , \"id\" : \"1558602440311--1831925786\" , \"offerItems\" : [ ... ], \"type\" : \"flight-offer\" }, { \"choiceProbability\" : \"0.0000252425060482\" , \"id\" : \"1558602440311-480701674\" , \"offerItems\" : [ ... ], \"type\" : \"flight-offer\" }, { \"choiceProbability\" : \"0.0000155124250899\" , \"id\" : \"1558602440311--966634676\" , \"offerItems\" : [ ... ], \"type\" : \"flight-offer\" } ], \"dictionaries\" : { ... } } , \"meta\" : { ... } } } Multi-city Searches Many travelers take advantage of their international trips to visit several destinations. Multi-city search is a functionality that lets you search for consecutive one-way flights between multiple destinations in a single request. The returned flights are packaged as a complete, bookable itinerary. To perform multi-city searches, you must use the POST method of Flight Offers Search API . The API lets you search for up to six origin and destination city pairs. In the following example, we\u2019ll fly from Madrid to Paris, where we\u2019ll spend a couple days, then fly to Munich for three days. Next, we\u2019ll visit Amsterdam for two days before finishing our journey with a return to Madrid. We'll use the following IATA city codes: MAD > PAR > MUC > AMS > MAD The request will look like this: curl https://api.amadeus.com/v2/shopping/flight-offers \\ -d '{ \u202f\u202f\"originDestinations\": [ \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"1\", \u202f\u202f\u202f\u202f\u202f\u202f\"originLocationCode\":\u202f\"MAD\", \u202f\u202f\u202f\u202f\u202f\u202f\"destinationLocationCode\":\u202f\"PAR\", \u202f\u202f\u202f\u202f\u202f\u202f\"departureDateTimeRange\": { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"date\":\u202f\"2020-10-03\" \u202f\u202f\u202f\u202f\u202f\u202f} \u202f\u202f\u202f\u202f}, \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"2\", \u202f\u202f\u202f\u202f\u202f\u202f\"originLocationCode\":\u202f\"PAR\", \u202f\u202f\u202f\u202f\u202f\u202f\"destinationLocationCode\":\u202f\"MUC\", \u202f\u202f\u202f\u202f\u202f\u202f\"departureDateTimeRange\": { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"date\":\u202f\"2020-10-05\" \u202f\u202f\u202f\u202f\u202f\u202f} \u202f\u202f\u202f\u202f}, \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"3\", \u202f\u202f\u202f\u202f\u202f\u202f\"originLocationCode\":\u202f\"MUC\", \u202f\u202f\u202f\u202f\u202f\u202f\"destinationLocationCode\":\u202f\"AMS\", \u202f\u202f\u202f\u202f\u202f\u202f\"departureDateTimeRange\": { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"date\":\u202f\"2020-10-08\" \u202f\u202f\u202f\u202f\u202f\u202f} \u202f\u202f\u202f\u202f}, \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"4\", \u202f\u202f\u202f\u202f\u202f\u202f\"originLocationCode\":\u202f\"AMS\", \u202f\u202f\u202f\u202f\u202f\u202f\"destinationLocationCode\":\u202f\"MAD\", \u202f\u202f\u202f\u202f\u202f\u202f\"departureDateTimeRange\": { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"date\":\u202f\"2020-10-11\" \u202f\u202f\u202f\u202f\u202f\u202f} \u202f\u202f\u202f\u202f} \u202f\u202f], \u202f\u202f\"travelers\": [ \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"1\", \u202f\u202f\u202f\u202f\u202f\u202f\"travelerType\":\u202f\"ADULT\", \u202f\u202f\u202f\u202f\u202f\u202f\"fareOptions\": [ \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"STANDARD\" \u202f\u202f\u202f\u202f\u202f\u202f] \u202f\u202f\u202f\u202f} \u202f\u202f], \u202f\u202f\"sources\": [ \u202f\u202f\u202f\u202f\"GDS\" \u202f\u202f], \u202f\u202f\"searchCriteria\": { \u202f\u202f\u202f\u202f\"maxFlightOffers\":\u202f1 \u202f\u202f} }' Confirming Fares The availability and price of airfare fluctuate so it\u2019s important to confirm before proceeding to book. This is especially true if time passes between the initial search and the decision to book, as fares are limited and there are thousands of bookings occurring every minute. During this step, you can also add ancillary products like extra bags or legroom. Once a flight has been selected, you\u2019ll need to confirm the availability and price of the fare. This is where the Flight Offers Price API comes in. This API returns the final fare price (including taxes and fees) of flights from the Flight Offers Search API as well as pricing for ancillary products and the payment information that will be needed to make the final booking. The body to be sent via POST is built by a new object of type flight-offers-pricing composed by a list of flight-offers (up to 6) + payment information. { \"data\" : { \"type\" : \"flight-offers-princing\" , \"flightOffers\" : [ { \"type\" : \"flight-offer\" } ], \"payment\" : [ { Payment_Object } ] } Booking a Flight Once the fare is confirmed, you\u2019re ready to use the Flight Create Orders API to perform the actual booking. This API lets you log a reservation in the airlines\u2019 systems and create a PNR, and returns a unique ID number and the reservation details. If you\u2019re using an airline consolidator, the PNR will be automatically sent to the consolidator for ticket issuance. Visit the Flight Create Orders documentation page for more details on this API. Remember, you need to be able to issue a ticket to make bookings with our Flight Create Order API. To access the API in production, you need to either sign a contract with an airline consolidator or be accredited to issue tickets yourself. Please contact us to learn more about which options is best for you. Issuing a ticket Once the booking is made, you need to complete payment. In most cases, you\u2019ll receive payment from the customer and then pay the airline, typically via an industry-specific settlement procedure like the BSP or ARC (more on those later). In the final step, a flight ticket is issued. In industry terms, a flight ticket is a confirmation that payment has been received, the reservation has been logged, and the customer has the right to enjoy the flight. For IATA member airlines , only certain accredited parties can issue tickets. In the next section, we\u2019ll go into detail about your options for managing this final step in the booking process. Common Errors Issuance not allowed in Self Service Self-Service users must work with an airline consolidator that can issue tickets on your behalf. In that case, the payment is not processed by the API but directly between you and the consolidator. Adding a form of payment into the Flight Create Orders API will be rejected by error INVALID FORMAT. Price discrepancy The price of airfare fluctuates constantly. Creating an order for a flight whose price is no longer valid at the time of booking will trigger the following error: { \"errors\" : [ { \"status\" : 400 , \"code\" : 37200 , \"title\" : \"PRICE DISCREPANCY\" , \"detail\" : \"Current grandTotal price (2780.28) is different from request one (2779.58)\" } ] } If you receive this error, reconfirm the fare price with the Flight Offers Price API before booking.","title":"Flights"},{"location":"resources/flights/#flights","text":"","title":"Flights"},{"location":"resources/flights/#searching-flights","text":"","title":"Searching Flights"},{"location":"resources/flights/#inspirational-search","text":"The Flight Inspiration Search API provides a list of destinations from a given city that is ordered by price and can be filtered by departure date or maximum price. The following request, retrieves a list of destinations from Boston: curl https://api.amadeus.com/v1/shopping/flight-destinations?origin = BOS Information This API returns cached prices. Once a destination is chosen, use the Flight Offers Search API to get real-time pricing and availability. The API provides a link to Flight Offers Search to search for flights once a destination is chosen and a link to Flight Cheapest Date Search to check the cheapest dates to fly: \"data\" : [ { \"type\" : \"flight-destination\" , \"origin\" : \"BOS\" , \"destination\" : \"CHI\" , \"departureDate\" : \"2020-07-22\" , \"returnDate\" : \"2020-07-28\" , \"price\" : { \"total\" : \"52.18\" }, \"links\" : { \"flightDates\" : \"https://test.api.amadeus.com/v1/shopping/flight-dates?origin=BOS&destination=CHI&departureDate=2020-07-02,2020-12-28&oneWay=false&duration=1,15&nonStop=false&maxPrice=300&currency=USD&viewBy=DURATION\" , \"flightOffers\" : \"https://test.api.amadeus.com/v2/shopping/flight-offers?originLocationCode=BOS&destinationLocationCode=CHI&departureDate=2020-07-22&returnDate=2020-07-28&adults=1&nonStop=false&maxPrice=300&currency=USD\" } } ]","title":"Inspirational Search"},{"location":"resources/flights/#flexible-search-on-dates","text":"The Flight Cheapest Date Search API finds the cheapest dates to travel from one city to another. The API provides list of flight options with dates and prices, and allows you to order by price, departure date or duration. Information This API returns cached prices. Once the dates are chosen, use the Flight Offers Search API to get real-time pricing and availability. The following example retrieves a list of flight-date objects containing pricing information given the origin and destination, and a range of dates: curl https://api.amadeus.com/v1/shopping/flight-dates?origin = BOS & destination = CHI & departureDate = 2020 -08-15,2020-08-28 The API provides a link to Flight Offers Search to search for flights once a destination is chosen, in order to proceed with the booking flow.","title":"Flexible Search on dates"},{"location":"resources/flights/#offers-search","text":"The Flight Offers Search API searches over 500 airlines to find the cheapest flights for a given itinerary. The API lets you can search flights between two cities, perform multi-city searches for longer itineraries and access one-way combinable fares to offer the cheapest options possible. For each itinerary, the API provides a list of flight offers with prices, fare details, airline names, baggage allowances and departure terminals. Warning Flights from low-cost carriers and American Airlines are currently unavailable. The Flight Offers Search API starts the booking cycle with a search for the best fares. The API returns a list of the cheapest flights given a city/airport of departure, a city/airport of arrival, the number and type of passengers and travel dates. The results are complete with airline name and fares as well as additional information like bag allowance and pricing for additional baggage. The API comes in two flavors: Simple version: GET operation with few parameters but which is quicker to integrate. On steroids: POST operation offering the full functionalities of the API. The minimum GET request has following parameters: curl https://api.amadus.com/v2/shopping/flight-offers?adults = 1 & originLocationCode = BOS & destinationLocationCode = CHI & departureDate = 2020 -07-22 The API returns a list of flight-offer objects (up to 250), including information such as itineraries, price, pricing options, etc. \"data\" : [ { \"type\" : \"flight-offer\" , \"id\" : \"1\" , \"source\" : \"GDS\" , \"instantTicketingRequired\" : false , \"nonHomogeneous\" : false , \"oneWay\" : false , \"lastTicketingDate\" : \"2020-07-02\" , \"numberOfBookableSeats\" : 9 , \"itineraries\" : [ ], \"price\" : { \"currency\" : \"EUR\" , \"total\" : \"22.00\" , \"base\" : \"13.00\" , \"fees\" : [ { \"amount\" : \"0.00\" , \"type\" : \"SUPPLIER\" }, { \"amount\" : \"0.00\" , \"type\" : \"TICKETING\" } ], \"grandTotal\" : \"22.00\" } } ]","title":"Offers Search"},{"location":"resources/flights/#flight-offers-prediction","text":"The Flight Choice Prediction API predicts the flight your users will choose. Our machine-learning models have analyzed historical interactions with the Flight Low-Fare Search API and can determine each flight\u2019s probability of being chosen. Boost conversions and create a personalized experience by filtering out the noise and showing your users the flights which are best for them. Here is a quick cURL example piping Low fare search API results directly to the prediction API, stay tuned for SDK updates with more helpers! Let\u2019s look at flight offers for a Madrid-New York round trip (limiting to 4 options for this test illustration) curl --request GET \\ --header 'Authorization: Bearer <token>' \\ --url https://test.api.amadeus.com/v1/shopping/flight-offers \\? origin \\= MAD \\& destination \\= NYC \\& departureDate \\= 2019 -08-24 \\& returnDate \\= 2019 -09-19 \\& max \\= 4 \\ | curl --request POST \\ --header 'content-type: application/json' \\ --header 'Authorization: Bearer <token>' \\ --url https://test.api.amadeus.com/v1/shopping/flight-offers/prediction --data @- The prediction API returns the same content as Low Fare search with the addition of the choiceProbability field for each flight offer element { \"data\" : [ { \"choiceProbability\" : \"0.9437563627430908\" , \"id\" : \"1558602440311-352021104\" , \"offerItems\" : [ ... ], \"type\" : \"flight-offer\" }, { \"choiceProbability\" : \"0.0562028823257711\" , \"id\" : \"1558602440311--1831925786\" , \"offerItems\" : [ ... ], \"type\" : \"flight-offer\" }, { \"choiceProbability\" : \"0.0000252425060482\" , \"id\" : \"1558602440311-480701674\" , \"offerItems\" : [ ... ], \"type\" : \"flight-offer\" }, { \"choiceProbability\" : \"0.0000155124250899\" , \"id\" : \"1558602440311--966634676\" , \"offerItems\" : [ ... ], \"type\" : \"flight-offer\" } ], \"dictionaries\" : { ... } } , \"meta\" : { ... } } }","title":"Flight Offers Prediction"},{"location":"resources/flights/#multi-city-searches","text":"Many travelers take advantage of their international trips to visit several destinations. Multi-city search is a functionality that lets you search for consecutive one-way flights between multiple destinations in a single request. The returned flights are packaged as a complete, bookable itinerary. To perform multi-city searches, you must use the POST method of Flight Offers Search API . The API lets you search for up to six origin and destination city pairs. In the following example, we\u2019ll fly from Madrid to Paris, where we\u2019ll spend a couple days, then fly to Munich for three days. Next, we\u2019ll visit Amsterdam for two days before finishing our journey with a return to Madrid. We'll use the following IATA city codes: MAD > PAR > MUC > AMS > MAD The request will look like this: curl https://api.amadeus.com/v2/shopping/flight-offers \\ -d '{ \u202f\u202f\"originDestinations\": [ \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"1\", \u202f\u202f\u202f\u202f\u202f\u202f\"originLocationCode\":\u202f\"MAD\", \u202f\u202f\u202f\u202f\u202f\u202f\"destinationLocationCode\":\u202f\"PAR\", \u202f\u202f\u202f\u202f\u202f\u202f\"departureDateTimeRange\": { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"date\":\u202f\"2020-10-03\" \u202f\u202f\u202f\u202f\u202f\u202f} \u202f\u202f\u202f\u202f}, \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"2\", \u202f\u202f\u202f\u202f\u202f\u202f\"originLocationCode\":\u202f\"PAR\", \u202f\u202f\u202f\u202f\u202f\u202f\"destinationLocationCode\":\u202f\"MUC\", \u202f\u202f\u202f\u202f\u202f\u202f\"departureDateTimeRange\": { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"date\":\u202f\"2020-10-05\" \u202f\u202f\u202f\u202f\u202f\u202f} \u202f\u202f\u202f\u202f}, \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"3\", \u202f\u202f\u202f\u202f\u202f\u202f\"originLocationCode\":\u202f\"MUC\", \u202f\u202f\u202f\u202f\u202f\u202f\"destinationLocationCode\":\u202f\"AMS\", \u202f\u202f\u202f\u202f\u202f\u202f\"departureDateTimeRange\": { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"date\":\u202f\"2020-10-08\" \u202f\u202f\u202f\u202f\u202f\u202f} \u202f\u202f\u202f\u202f}, \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"4\", \u202f\u202f\u202f\u202f\u202f\u202f\"originLocationCode\":\u202f\"AMS\", \u202f\u202f\u202f\u202f\u202f\u202f\"destinationLocationCode\":\u202f\"MAD\", \u202f\u202f\u202f\u202f\u202f\u202f\"departureDateTimeRange\": { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"date\":\u202f\"2020-10-11\" \u202f\u202f\u202f\u202f\u202f\u202f} \u202f\u202f\u202f\u202f} \u202f\u202f], \u202f\u202f\"travelers\": [ \u202f\u202f\u202f\u202f{ \u202f\u202f\u202f\u202f\u202f\u202f\"id\":\u202f\"1\", \u202f\u202f\u202f\u202f\u202f\u202f\"travelerType\":\u202f\"ADULT\", \u202f\u202f\u202f\u202f\u202f\u202f\"fareOptions\": [ \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\"STANDARD\" \u202f\u202f\u202f\u202f\u202f\u202f] \u202f\u202f\u202f\u202f} \u202f\u202f], \u202f\u202f\"sources\": [ \u202f\u202f\u202f\u202f\"GDS\" \u202f\u202f], \u202f\u202f\"searchCriteria\": { \u202f\u202f\u202f\u202f\"maxFlightOffers\":\u202f1 \u202f\u202f} }'","title":"Multi-city Searches"},{"location":"resources/flights/#confirming-fares","text":"The availability and price of airfare fluctuate so it\u2019s important to confirm before proceeding to book. This is especially true if time passes between the initial search and the decision to book, as fares are limited and there are thousands of bookings occurring every minute. During this step, you can also add ancillary products like extra bags or legroom. Once a flight has been selected, you\u2019ll need to confirm the availability and price of the fare. This is where the Flight Offers Price API comes in. This API returns the final fare price (including taxes and fees) of flights from the Flight Offers Search API as well as pricing for ancillary products and the payment information that will be needed to make the final booking. The body to be sent via POST is built by a new object of type flight-offers-pricing composed by a list of flight-offers (up to 6) + payment information. { \"data\" : { \"type\" : \"flight-offers-princing\" , \"flightOffers\" : [ { \"type\" : \"flight-offer\" } ], \"payment\" : [ { Payment_Object } ] }","title":"Confirming Fares"},{"location":"resources/flights/#booking-a-flight","text":"Once the fare is confirmed, you\u2019re ready to use the Flight Create Orders API to perform the actual booking. This API lets you log a reservation in the airlines\u2019 systems and create a PNR, and returns a unique ID number and the reservation details. If you\u2019re using an airline consolidator, the PNR will be automatically sent to the consolidator for ticket issuance. Visit the Flight Create Orders documentation page for more details on this API. Remember, you need to be able to issue a ticket to make bookings with our Flight Create Order API. To access the API in production, you need to either sign a contract with an airline consolidator or be accredited to issue tickets yourself. Please contact us to learn more about which options is best for you.","title":"Booking a Flight"},{"location":"resources/flights/#issuing-a-ticket","text":"Once the booking is made, you need to complete payment. In most cases, you\u2019ll receive payment from the customer and then pay the airline, typically via an industry-specific settlement procedure like the BSP or ARC (more on those later). In the final step, a flight ticket is issued. In industry terms, a flight ticket is a confirmation that payment has been received, the reservation has been logged, and the customer has the right to enjoy the flight. For IATA member airlines , only certain accredited parties can issue tickets. In the next section, we\u2019ll go into detail about your options for managing this final step in the booking process.","title":"Issuing a ticket"},{"location":"resources/flights/#common-errors","text":"","title":"Common Errors"},{"location":"resources/flights/#issuance-not-allowed-in-self-service","text":"Self-Service users must work with an airline consolidator that can issue tickets on your behalf. In that case, the payment is not processed by the API but directly between you and the consolidator. Adding a form of payment into the Flight Create Orders API will be rejected by error INVALID FORMAT.","title":"Issuance not allowed in Self Service"},{"location":"resources/flights/#price-discrepancy","text":"The price of airfare fluctuates constantly. Creating an order for a flight whose price is no longer valid at the time of booking will trigger the following error: { \"errors\" : [ { \"status\" : 400 , \"code\" : 37200 , \"title\" : \"PRICE DISCREPANCY\" , \"detail\" : \"Current grandTotal price (2780.28) is different from request one (2779.58)\" } ] } If you receive this error, reconfirm the fare price with the Flight Offers Price API before booking.","title":"Price discrepancy"},{"location":"resources/hotels/","text":"Hotels The Amadeus Hotel Search and Hotel Booking APIs let you build a complete hotel booking engine in four easy steps. Learn how to get started and help your users book the perfect room at over 150,000 hotels worldwide. The three endpoints of the\u202fHotel Search API let your users search hotels by destination, compare rates and rooms and get the final price of the stay. Once a room and rate are selected, you can help them complete the reservation with the Hotel Booking API. Here\u2019s how it works. Searching Hotels The API allows you to search for hotels for a given location and time. The endpoints are designed from the perspective of a funnel; i.e. to search broadly for all hotels, narrow down to a particular hotel and eventually its unique offers. A host of parameters allow the user to filter the response as per his/her need. This API thus renders enormous capabilities to build solutions for travelers not only for the hotels space, but also complement other travel scenarios or enrich apps with hotel-related information. Search hotels by location The first endpoint /shopping/hotel-offers provides\u202fa list of available hotels in a chosen location, which is defined by a city code\u202for\u202fa set of GPS coordinates. You can customize the request with parameters like chain name, amenities, star ratings, board type and more. curl https://test.api.amadeus.com/v2/shopping/hotel-offers?cityCode = LON The API returns a list of hotel-offers objects containing the price of the cheapest available room as well as information including the hotelId , location, address, rating, description, amenities, contact information. Information The API returns cached prices. To get real-time prices and availability for a specific hotel, you\u2019ll need to move to the second endpoint. See rates for a chosen hotel After selecting a hotel, the next step in the booking flow is to get a list the available offers. Hotel offers are various combinations of rooms, services and prices. A standard room or a studio suite? One bed or two? With breakfast and free cancellation? These are the factors that make up a hotel offer. To get a list of hotel-offers for your desired hotel, just pass the hotelId from the response of the 1st endpoint into the request to the 2nd endpoint: curl https://test.api.amadeus.com/v2/shopping/hotel-offers/by-hotel?hotelId = BGLONBGB Where BGLONBGB belongs to the hotelId returned by the first endpoint. The endpoint will return a new list of hotel-offers objects, together with a list of offers : \"offers\" : [ { \"id\" : \"Y0UE4D1MUT\" , \"checkInDate\" : \"2020-07-01\" , \"checkOutDate\" : \"2020-07-02\" , \"rateCode\" : \"PRO\" , \"rateFamilyEstimated\" : { \"code\" : \"PRO\" , \"type\" : \"P\" }, \"commission\" : { \"percentage\" : \"4.00\" }, \"boardType\" : \"ROOM_ONLY\" , \"room\" : { \"type\" : \"ROH\" , \"typeEstimated\" : { \"category\" : \"STANDARD_ROOM\" } } } Get the final price and conditions The third step is to confirm the final price and availability of the chosen offer and get the full conditions. As there are thousands of people reserving hotels at any given second, the availability of a given room may change between the moment you search and the moment you decide to book. If you don\u2019t confirm the price and availability, you may receive an error when it comes time to make the reservation. The 3rd endpoint also returns the full conditions of the offer including cancellation policy, accepted methods of payment and a complete description of what\u2019s included in the offer. curl https://test.api.amadeus.com/v2/shopping/hotel-offers/Y0UE4D1MUT This endpoint takes the offer Id obtained in the previous step as a URL parameter. Now that you have found the offer (and its Id) you want and confirmed the price and availability, you're ready to book! Booking the Hotel The Hotel Booking API\u202fis the final step in the booking flow. By making a POST request with the offer Id returned by the Hotel Search API, the guest information and the payment information, you can create a booking directly on the hotel reservation system. curl https://test.api.amadeus.com/v1/booking/hotel-bookings \\ --data-raw '{ \"data\": { \"offerId\": \"Y0UE4D1MUT\", \"guests\": [ { \"id\": 1, \"name\": { \"title\": \"MR\", \"firstName\": \"BOB\", \"lastName\": \"SMITH\" }, \"contact\": { \"phone\": \"+33679278416\", \"email\": \"bob.smith@email.com\" } } ], \"payments\": [ { \"id\": 1, \"method\": \"creditCard\", \"card\": { \"vendorCode\": \"VI\", \"cardNumber\": \"4151289722471370\", \"expiryDate\": \"2021-08\" } } ], \"rooms\": [ { \"guestIds\": [ 1 ], \"paymentId\": 1, \"specialRequest\": \"I will arrive at midnight\" } ] } }' Congratulations, you\u2019ve just performed your first hotel booking! Once the reservation is made, the API will return a unique booking confirmation ID which you can send to your users. Notes about Payment The Hotel Search API returns information about the payment policy of each hotel. The main policy types are: Guarantee: the hotel will save credit card information during booking but not make any charge to the account. In the case of a no-show or out-of-policy cancellation, the hotel may charge penalties to the card. Deposit: at the time or booking or on a given deadline, the hotel will charge the guest a percentage of the total amount of the reservation. The remaining amount is paid by the traveler directly at the hotel. Prepay: the total amount of the reservation must be paid by the traveler during booking. The current version of the Hotel Booking API only permits booking at hotels that accept credit cards. During the booking process, Amadeus passes the payment and guest information to the hotel but does not validate information. Be sure to validate the payment and guest information, as invalid information may result in the reservation being cancelled. As soon as your application stores, transmits, or processes cardholder information, you will need to comply with\u202fPCI Data Security Standard (PCI DSS). For more information, visit the PCI Security Council website . Getting Hotel Ratings Amadeus Hotel Ratings API returns a rating for many of the crucial elements of a hotel\u2019s offer; whether that be sleep quality, services, facilities, room comforts, value for money, location and many other variables. Hotel Ratings API guarantees high-quality service for your customers. The sentiment analysis, just like the one below, is displayed in a simple flow to allow you to easily identify the best hotels based on traveler reviews: curl https://test.api.amadeus.com/v2/e-reputation/hotel-sentiments?hotelIds = TELONMFS,ADNYCCTB,XXXYYY01 { \"data\" : [ { \"type\" : \"hotelSentiment\" , \"numberOfReviews\" : 218 , \"numberOfRatings\" : 278 , \"hotelId\" : \"ADNYCCTB\" , \"overallRating\" : 93 , \"sentiments\" : { \"sleepQuality\" : 87 , \"service\" : 98 , \"facilities\" : 90 , \"roomComforts\" : 92 , \"valueForMoney\" : 87 , \"catering\" : 89 , \"location\" : 98 , \"pointsOfInterest\" : 91 , \"staff\" : 100 } }, { \"type\" : \"hotelSentiment\" , \"numberOfReviews\" : 2667 , \"numberOfRatings\" : 2666 , \"hotelId\" : \"TELONMFS\" , \"overallRating\" : 81 , \"sentiments\" : { \"sleepQuality\" : 78 , \"service\" : 80 , \"facilities\" : 75 , \"roomComforts\" : 87 , \"valueForMoney\" : 75 , \"catering\" : 81 , \"location\" : 89 , \"internet\" : 72 , \"pointsOfInterest\" : 81 , \"staff\" : 89 } } ] With these additional filters, your booking process is made more efficient and you can offer your customers an enriched shopping experience, confident that you are offering a hotel choice that is rated highly in the areas that customers most appreciate. Common Errors AcceptedPayments must be creditCards The current version of the Hotel Booking API only supports credit card payments, which are accepted by most hotels. The Hotel Search API returns the payment policy of each hotel under acceptedPayments in the policies section. Empty response from the View Room endpoint If you get an empty response from the Hotel Search API\u2019s second endpoint, then the hotel is fully booked and has no vacancy for the requested dates. If you don't use the checkInDate and checkOutDate parameters in the request the API will return results for a one-night stay starting on the current date. If the hotel is full, the response will be empty. No rooms available at requested property { \"errors\" : [ { \"status\" : 400 , \"code\" : 3664 , \"title\" : \"NO ROOMS AVAILABLE AT REQUESTED PROPERTY\" } ] } The offer of the selected Hotel is not longer available. Please select a new one.","title":"Hotels"},{"location":"resources/hotels/#hotels","text":"The Amadeus Hotel Search and Hotel Booking APIs let you build a complete hotel booking engine in four easy steps. Learn how to get started and help your users book the perfect room at over 150,000 hotels worldwide. The three endpoints of the\u202fHotel Search API let your users search hotels by destination, compare rates and rooms and get the final price of the stay. Once a room and rate are selected, you can help them complete the reservation with the Hotel Booking API. Here\u2019s how it works.","title":"Hotels"},{"location":"resources/hotels/#searching-hotels","text":"The API allows you to search for hotels for a given location and time. The endpoints are designed from the perspective of a funnel; i.e. to search broadly for all hotels, narrow down to a particular hotel and eventually its unique offers. A host of parameters allow the user to filter the response as per his/her need. This API thus renders enormous capabilities to build solutions for travelers not only for the hotels space, but also complement other travel scenarios or enrich apps with hotel-related information.","title":"Searching Hotels"},{"location":"resources/hotels/#search-hotels-by-location","text":"The first endpoint /shopping/hotel-offers provides\u202fa list of available hotels in a chosen location, which is defined by a city code\u202for\u202fa set of GPS coordinates. You can customize the request with parameters like chain name, amenities, star ratings, board type and more. curl https://test.api.amadeus.com/v2/shopping/hotel-offers?cityCode = LON The API returns a list of hotel-offers objects containing the price of the cheapest available room as well as information including the hotelId , location, address, rating, description, amenities, contact information. Information The API returns cached prices. To get real-time prices and availability for a specific hotel, you\u2019ll need to move to the second endpoint.","title":"Search hotels by location"},{"location":"resources/hotels/#see-rates-for-a-chosen-hotel","text":"After selecting a hotel, the next step in the booking flow is to get a list the available offers. Hotel offers are various combinations of rooms, services and prices. A standard room or a studio suite? One bed or two? With breakfast and free cancellation? These are the factors that make up a hotel offer. To get a list of hotel-offers for your desired hotel, just pass the hotelId from the response of the 1st endpoint into the request to the 2nd endpoint: curl https://test.api.amadeus.com/v2/shopping/hotel-offers/by-hotel?hotelId = BGLONBGB Where BGLONBGB belongs to the hotelId returned by the first endpoint. The endpoint will return a new list of hotel-offers objects, together with a list of offers : \"offers\" : [ { \"id\" : \"Y0UE4D1MUT\" , \"checkInDate\" : \"2020-07-01\" , \"checkOutDate\" : \"2020-07-02\" , \"rateCode\" : \"PRO\" , \"rateFamilyEstimated\" : { \"code\" : \"PRO\" , \"type\" : \"P\" }, \"commission\" : { \"percentage\" : \"4.00\" }, \"boardType\" : \"ROOM_ONLY\" , \"room\" : { \"type\" : \"ROH\" , \"typeEstimated\" : { \"category\" : \"STANDARD_ROOM\" } } }","title":"See rates for a chosen hotel"},{"location":"resources/hotels/#get-the-final-price-and-conditions","text":"The third step is to confirm the final price and availability of the chosen offer and get the full conditions. As there are thousands of people reserving hotels at any given second, the availability of a given room may change between the moment you search and the moment you decide to book. If you don\u2019t confirm the price and availability, you may receive an error when it comes time to make the reservation. The 3rd endpoint also returns the full conditions of the offer including cancellation policy, accepted methods of payment and a complete description of what\u2019s included in the offer. curl https://test.api.amadeus.com/v2/shopping/hotel-offers/Y0UE4D1MUT This endpoint takes the offer Id obtained in the previous step as a URL parameter. Now that you have found the offer (and its Id) you want and confirmed the price and availability, you're ready to book!","title":"Get the final price and conditions"},{"location":"resources/hotels/#booking-the-hotel","text":"The Hotel Booking API\u202fis the final step in the booking flow. By making a POST request with the offer Id returned by the Hotel Search API, the guest information and the payment information, you can create a booking directly on the hotel reservation system. curl https://test.api.amadeus.com/v1/booking/hotel-bookings \\ --data-raw '{ \"data\": { \"offerId\": \"Y0UE4D1MUT\", \"guests\": [ { \"id\": 1, \"name\": { \"title\": \"MR\", \"firstName\": \"BOB\", \"lastName\": \"SMITH\" }, \"contact\": { \"phone\": \"+33679278416\", \"email\": \"bob.smith@email.com\" } } ], \"payments\": [ { \"id\": 1, \"method\": \"creditCard\", \"card\": { \"vendorCode\": \"VI\", \"cardNumber\": \"4151289722471370\", \"expiryDate\": \"2021-08\" } } ], \"rooms\": [ { \"guestIds\": [ 1 ], \"paymentId\": 1, \"specialRequest\": \"I will arrive at midnight\" } ] } }' Congratulations, you\u2019ve just performed your first hotel booking! Once the reservation is made, the API will return a unique booking confirmation ID which you can send to your users.","title":"Booking the Hotel"},{"location":"resources/hotels/#notes-about-payment","text":"The Hotel Search API returns information about the payment policy of each hotel. The main policy types are: Guarantee: the hotel will save credit card information during booking but not make any charge to the account. In the case of a no-show or out-of-policy cancellation, the hotel may charge penalties to the card. Deposit: at the time or booking or on a given deadline, the hotel will charge the guest a percentage of the total amount of the reservation. The remaining amount is paid by the traveler directly at the hotel. Prepay: the total amount of the reservation must be paid by the traveler during booking. The current version of the Hotel Booking API only permits booking at hotels that accept credit cards. During the booking process, Amadeus passes the payment and guest information to the hotel but does not validate information. Be sure to validate the payment and guest information, as invalid information may result in the reservation being cancelled. As soon as your application stores, transmits, or processes cardholder information, you will need to comply with\u202fPCI Data Security Standard (PCI DSS). For more information, visit the PCI Security Council website .","title":"Notes about Payment"},{"location":"resources/hotels/#getting-hotel-ratings","text":"Amadeus Hotel Ratings API returns a rating for many of the crucial elements of a hotel\u2019s offer; whether that be sleep quality, services, facilities, room comforts, value for money, location and many other variables. Hotel Ratings API guarantees high-quality service for your customers. The sentiment analysis, just like the one below, is displayed in a simple flow to allow you to easily identify the best hotels based on traveler reviews: curl https://test.api.amadeus.com/v2/e-reputation/hotel-sentiments?hotelIds = TELONMFS,ADNYCCTB,XXXYYY01 { \"data\" : [ { \"type\" : \"hotelSentiment\" , \"numberOfReviews\" : 218 , \"numberOfRatings\" : 278 , \"hotelId\" : \"ADNYCCTB\" , \"overallRating\" : 93 , \"sentiments\" : { \"sleepQuality\" : 87 , \"service\" : 98 , \"facilities\" : 90 , \"roomComforts\" : 92 , \"valueForMoney\" : 87 , \"catering\" : 89 , \"location\" : 98 , \"pointsOfInterest\" : 91 , \"staff\" : 100 } }, { \"type\" : \"hotelSentiment\" , \"numberOfReviews\" : 2667 , \"numberOfRatings\" : 2666 , \"hotelId\" : \"TELONMFS\" , \"overallRating\" : 81 , \"sentiments\" : { \"sleepQuality\" : 78 , \"service\" : 80 , \"facilities\" : 75 , \"roomComforts\" : 87 , \"valueForMoney\" : 75 , \"catering\" : 81 , \"location\" : 89 , \"internet\" : 72 , \"pointsOfInterest\" : 81 , \"staff\" : 89 } } ] With these additional filters, your booking process is made more efficient and you can offer your customers an enriched shopping experience, confident that you are offering a hotel choice that is rated highly in the areas that customers most appreciate.","title":"Getting Hotel Ratings"},{"location":"resources/hotels/#common-errors","text":"","title":"Common Errors"},{"location":"resources/hotels/#acceptedpayments-must-be-creditcards","text":"The current version of the Hotel Booking API only supports credit card payments, which are accepted by most hotels. The Hotel Search API returns the payment policy of each hotel under acceptedPayments in the policies section.","title":"AcceptedPayments must be creditCards"},{"location":"resources/hotels/#empty-response-from-the-view-room-endpoint","text":"If you get an empty response from the Hotel Search API\u2019s second endpoint, then the hotel is fully booked and has no vacancy for the requested dates. If you don't use the checkInDate and checkOutDate parameters in the request the API will return results for a one-night stay starting on the current date. If the hotel is full, the response will be empty.","title":"Empty response from the View Room endpoint"},{"location":"resources/hotels/#no-rooms-available-at-requested-property","text":"{ \"errors\" : [ { \"status\" : 400 , \"code\" : 3664 , \"title\" : \"NO ROOMS AVAILABLE AT REQUESTED PROPERTY\" } ] } The offer of the selected Hotel is not longer available. Please select a new one.","title":"No rooms available at requested property"},{"location":"resources/locations/","text":"Locations Airport and City Search The Airport & City Search API finds airports and cities that match a specific word or string of letters. Using this API, you can automatically suggest airports based on what the traveler enters in the search field. The API provides a list of airports/cities ordered by yearly passenger volume with the name, 3-letter IATA code, time zone and coordinates of each airport. Airport Nearest Relevant The Airport Nearest Relevant API finds the closest major airports to a starting point. The API provides a list of commercial airports within a 500km (311mi) radius of a given point that are ordered by relevance, which considers their distance from the starting point and their yearly flight traffic. For each airport, the API provides the name, 3-letter IATA code, time zone and coordinates. Points of Interest The Points of Interest API relies on AVUXI\u2019s GeoPopularity algorithm, which analyses and ranks geolocated data from more than 60 sources, including comments, photos, and reviews from millions of users. Points of Interest by radius The first endpoint supports only GET method and returns a list of points of interest for a given location - latitude and longitude - and a radius (1 km by default). The following sample returns a list of POIs for someone geolocated in Barcelona downtown: curl https://test.api.amadeus.com/v1/reference-data/ locations/pois?latitude = 41 .397158 & longitude = 2 .160873 In case we want to expand the area of search, we could use the radius parameter. In the following example, we increase the radius up to 3 kilometers: curl https://test.api.amadeus.com/v1/reference-data/locations/pois?latitude = 41 .397158 & longitude = 2 .160873 & radius = 3 Points of Interest by a square The second endpoint works in a similar way to the radius-based endpoint: It supports also GET operations but it defines the area of search with a box: north, west, south, and east. The following example returns a list of points of interest for an area around Barcelona: curl https://test.api.amadeus.com/v1/reference-data/locations/pois/by-square?north = 41 .397158 & west = 2 .160873 & south = 41 .394582 & east = 2 .177181 Response For both endpoints you can expect the same response format: a list of locations with the following JSON structure: { \"type\" : \"location\" , \"subType\" : \"POINT_OF_INTEREST\" , \"geoCode\" : { \"latitude\" : 41.39165 , \"longitude\" : 2.164772 }, \"name\" : \"Casa Batll\u00f3\" , \"category\" : \"SIGHTS\" , \"tags\" : [ \"sightseeing\" , \"museum\" , \"sights\" , \"landmark\" ] } Where: Type and subType are literals with fixed values. geoCode is a structure which contains geolocation information: latitude and longitude of the location. name contains the string identifying the location. category corresponds to the category of the location and could be one of the following values: SIGHTS, BEACH_PARK, HISTORICAL, NIGHTLIFE, RESTAURANT or SHOPPING. tags field is a list of words related to that location which comes directly from the different sources of data analyzed. Safe Rates The Safe Place API is the newest addition to our Self-Service API catalog. Created in partnership with GeoSure, the global leader in scaled location safety ratings, the API is powered by GeoSafeScores\u2122 algorithm which provides safety and security ratings for over 65,000 cities and neighborhoods worldwide. Safe Places by radius This endpoint returns the overall safety rating of the targeted location defined by latitude, longitude and a radius. It\u2019s very useful when you want to retrieve safety information for a downtown area, or around a specific point like a hotel, market or crowed touristic attraction. For example, the following request retrieves the safety scores around the famous Sagrada Family in Barcelona: curl https://test.api.amadeus.com/v1/safety/safety-rated-locations?latitude = 41 .403749 & longitude = 2 .174387 Note that you don\u2019t have to specify the radius \u2013 it is an optional query parameter set to 1 km by default. Safe Places by square The last endpoint allows users to retrieve the safety rated information using the unique identifier for a specific location, returned by the previous two endpoints: { \u202f \"subType\" : \u202f \"CITY\" , \u202f \"name\" : \u202f \"Barcelona\" , \"id\" : \u202f \"Q930402725\" , \"geoCode\" : \u202f { \u202f\u202f\u202f \"latitude\" : \u202f 41.4172284 , \u202f\u202f\u202f \u201clongitude\": \u202f 2.163444, \u202f }, This endpoint is useful when you want to perform a new check on a previously retrieved area. The following example, return the safety scores for the city of Barcelona using its unique id: curl https://test.api.amadeus.com/v1/safety/safety-rated-location?id = Q930402725 \", Response The API returns an Overall Safety score and scores for six component categories: Women\u2019s Safety Health & Medical Safety Physical Harm Theft Political Freedoms LGBTQ+ Safety Let\u2019s look at the response of a call to Safe Place by Radius using central Barcelona as the coordinates: \u202f \"safetyScores\" : \u202f { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"lgbtq\" : \u202f 42 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"medical\" : \u202f 25 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"overall\" : \u202f 47 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"physicalHarm\" : \u202f 39 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"politicalFreedom\" : \u202f 50 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"theft\" : \u202f 56 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"women\" : \u202f 34 \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f } Safety scores range on a scale of 1-100, with 1 being the safest and 100 being the least safe. In this example, a \u201cmedical\u201d score of 25 indicates that the health and medical conditions at the location are very self and quality medical facilities are available. On the other hand, the \u201ctheft\u201d score of 56 indicates an average-level risk of theft in the area.","title":"Locations"},{"location":"resources/locations/#locations","text":"","title":"Locations"},{"location":"resources/locations/#airport-and-city-search","text":"The Airport & City Search API finds airports and cities that match a specific word or string of letters. Using this API, you can automatically suggest airports based on what the traveler enters in the search field. The API provides a list of airports/cities ordered by yearly passenger volume with the name, 3-letter IATA code, time zone and coordinates of each airport.","title":"Airport and City Search"},{"location":"resources/locations/#airport-nearest-relevant","text":"The Airport Nearest Relevant API finds the closest major airports to a starting point. The API provides a list of commercial airports within a 500km (311mi) radius of a given point that are ordered by relevance, which considers their distance from the starting point and their yearly flight traffic. For each airport, the API provides the name, 3-letter IATA code, time zone and coordinates.","title":"Airport Nearest Relevant"},{"location":"resources/locations/#points-of-interest","text":"The Points of Interest API relies on AVUXI\u2019s GeoPopularity algorithm, which analyses and ranks geolocated data from more than 60 sources, including comments, photos, and reviews from millions of users.","title":"Points of Interest"},{"location":"resources/locations/#points-of-interest-by-radius","text":"The first endpoint supports only GET method and returns a list of points of interest for a given location - latitude and longitude - and a radius (1 km by default). The following sample returns a list of POIs for someone geolocated in Barcelona downtown: curl https://test.api.amadeus.com/v1/reference-data/ locations/pois?latitude = 41 .397158 & longitude = 2 .160873 In case we want to expand the area of search, we could use the radius parameter. In the following example, we increase the radius up to 3 kilometers: curl https://test.api.amadeus.com/v1/reference-data/locations/pois?latitude = 41 .397158 & longitude = 2 .160873 & radius = 3","title":"Points of Interest by radius"},{"location":"resources/locations/#points-of-interest-by-a-square","text":"The second endpoint works in a similar way to the radius-based endpoint: It supports also GET operations but it defines the area of search with a box: north, west, south, and east. The following example returns a list of points of interest for an area around Barcelona: curl https://test.api.amadeus.com/v1/reference-data/locations/pois/by-square?north = 41 .397158 & west = 2 .160873 & south = 41 .394582 & east = 2 .177181","title":"Points of Interest by a square"},{"location":"resources/locations/#response","text":"For both endpoints you can expect the same response format: a list of locations with the following JSON structure: { \"type\" : \"location\" , \"subType\" : \"POINT_OF_INTEREST\" , \"geoCode\" : { \"latitude\" : 41.39165 , \"longitude\" : 2.164772 }, \"name\" : \"Casa Batll\u00f3\" , \"category\" : \"SIGHTS\" , \"tags\" : [ \"sightseeing\" , \"museum\" , \"sights\" , \"landmark\" ] } Where: Type and subType are literals with fixed values. geoCode is a structure which contains geolocation information: latitude and longitude of the location. name contains the string identifying the location. category corresponds to the category of the location and could be one of the following values: SIGHTS, BEACH_PARK, HISTORICAL, NIGHTLIFE, RESTAURANT or SHOPPING. tags field is a list of words related to that location which comes directly from the different sources of data analyzed.","title":"Response"},{"location":"resources/locations/#safe-rates","text":"The Safe Place API is the newest addition to our Self-Service API catalog. Created in partnership with GeoSure, the global leader in scaled location safety ratings, the API is powered by GeoSafeScores\u2122 algorithm which provides safety and security ratings for over 65,000 cities and neighborhoods worldwide.","title":"Safe Rates"},{"location":"resources/locations/#safe-places-by-radius","text":"This endpoint returns the overall safety rating of the targeted location defined by latitude, longitude and a radius. It\u2019s very useful when you want to retrieve safety information for a downtown area, or around a specific point like a hotel, market or crowed touristic attraction. For example, the following request retrieves the safety scores around the famous Sagrada Family in Barcelona: curl https://test.api.amadeus.com/v1/safety/safety-rated-locations?latitude = 41 .403749 & longitude = 2 .174387 Note that you don\u2019t have to specify the radius \u2013 it is an optional query parameter set to 1 km by default.","title":"Safe Places by radius"},{"location":"resources/locations/#safe-places-by-square","text":"The last endpoint allows users to retrieve the safety rated information using the unique identifier for a specific location, returned by the previous two endpoints: { \u202f \"subType\" : \u202f \"CITY\" , \u202f \"name\" : \u202f \"Barcelona\" , \"id\" : \u202f \"Q930402725\" , \"geoCode\" : \u202f { \u202f\u202f\u202f \"latitude\" : \u202f 41.4172284 , \u202f\u202f\u202f \u201clongitude\": \u202f 2.163444, \u202f }, This endpoint is useful when you want to perform a new check on a previously retrieved area. The following example, return the safety scores for the city of Barcelona using its unique id: curl https://test.api.amadeus.com/v1/safety/safety-rated-location?id = Q930402725 \",","title":"Safe Places by square"},{"location":"resources/locations/#response_1","text":"The API returns an Overall Safety score and scores for six component categories: Women\u2019s Safety Health & Medical Safety Physical Harm Theft Political Freedoms LGBTQ+ Safety Let\u2019s look at the response of a call to Safe Place by Radius using central Barcelona as the coordinates: \u202f \"safetyScores\" : \u202f { \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"lgbtq\" : \u202f 42 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"medical\" : \u202f 25 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"overall\" : \u202f 47 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"physicalHarm\" : \u202f 39 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"politicalFreedom\" : \u202f 50 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"theft\" : \u202f 56 , \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f \"women\" : \u202f 34 \u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f\u202f } Safety scores range on a scale of 1-100, with 1 being the safest and 100 being the least safe. In this example, a \u201cmedical\u201d score of 25 indicates that the health and medical conditions at the location are very self and quality medical facilities are available. On the other hand, the \u201ctheft\u201d score of 56 indicates an average-level risk of theft in the area.","title":"Response"},{"location":"resources/predictions/","text":"Predictions Flight Delay Prediction API We used historical flight delay data to train a machine learning model to predict whether a flight will be on time or delayed. Calling the API is simple: you need to input basic flight information about the flight, carrier, airports and flight number and you can begin calling. Check out our API reference page to see the swagger with all the parameters. Here\u2019s an example for a flight from Frankfurt to Brussels: curl https://test.api.amadeus.com/v1/travel/predictions/flight-delay?originLocationCode = BRU & destinationLocationCode = FRA & departureDate = 2020 -01-14 & departureTime = 11 :05:00 & arrivalDate = 2020 -01-14 & arrivalTime = 12 :10:00 & aircraftCode = 32A & carrierCode = LH & flightNumber = 1009 & duration = PT1H05M The API will return four possible delay categories: LESS_THAN_30_MINUTES BETWEEN_30_AND_60_MINUTES BETWEEN_60_AND_120_MINUTES OVER_120_MINUTES_OR_CANCELLED The API returns the corresponding probability of each delay length, so you\u2019ll know the statistical likelihood of each delay occurring. Ready to see the results of the flight to Brussels? Here\u2019s the output: \"data\" : [ { \"id\" : \"TK1816NCEIST20200801\" , \"probability\" : \"0.13336977\" , \"result\" : \"LESS_THAN_30_MINUTES\" , \"subType\" : \"flight-delay\" , \"type\" : \"prediction\" }, { \"id\" : \"TK1816NCEIST20200801\" , \"probability\" : \"0.42023364\" , \"result\" : \"BETWEEN_30_AND_60_MINUTES\" , \"subType\" : \"flight-delay\" , \"type\" : \"prediction\" }, { \"id\" : \"TK1816NCEIST20200801\" , \"probability\" : \"0.34671372\" , \"result\" : \"BETWEEN_60_AND_120_MINUTES\" , \"subType\" : \"flight-delay\" , \"type\" : \"prediction\" }, { \"id\" : \"TK1816NCEIST20200801\" , \"probability\" : \"0.09968289\" , \"result\" : \"OVER_120_MINUTES_OR_CANCELLED\" , \"subType\" : \"flight-delay\" , \"type\" : \"prediction\" } ] As you can see, the algorithm returns a 42.7% chance of a two-hour delay or eventual cancellation. Knowing this now, would you still make the decision to book the flight? We created this API because we want to empower travelers to make that choice. Airport On-Time Performance The Airport On-Time Performance API estimates the percentage of an airport\u2019s flights that will leave on time. We\u2019ve harnessed Amadeus historical data to predict the best airports for an speedy, stress-free flight. Give users meaningful context and empower them to make better choices about connecting flights and departure airports. Trip Purpose Prediction The Trip Purpose Prediction API predicts whether a flight search is for business or leisure. Our machine-learning models have detected which patterns of departure and arrival cities, flight dates and search dates are associated with business trips and leisure trips. Understand why your users and traveling and show them the flights, fares and ancillaries that suit them best.","title":"Predictions"},{"location":"resources/predictions/#predictions","text":"","title":"Predictions"},{"location":"resources/predictions/#flight-delay-prediction-api","text":"We used historical flight delay data to train a machine learning model to predict whether a flight will be on time or delayed. Calling the API is simple: you need to input basic flight information about the flight, carrier, airports and flight number and you can begin calling. Check out our API reference page to see the swagger with all the parameters. Here\u2019s an example for a flight from Frankfurt to Brussels: curl https://test.api.amadeus.com/v1/travel/predictions/flight-delay?originLocationCode = BRU & destinationLocationCode = FRA & departureDate = 2020 -01-14 & departureTime = 11 :05:00 & arrivalDate = 2020 -01-14 & arrivalTime = 12 :10:00 & aircraftCode = 32A & carrierCode = LH & flightNumber = 1009 & duration = PT1H05M The API will return four possible delay categories: LESS_THAN_30_MINUTES BETWEEN_30_AND_60_MINUTES BETWEEN_60_AND_120_MINUTES OVER_120_MINUTES_OR_CANCELLED The API returns the corresponding probability of each delay length, so you\u2019ll know the statistical likelihood of each delay occurring. Ready to see the results of the flight to Brussels? Here\u2019s the output: \"data\" : [ { \"id\" : \"TK1816NCEIST20200801\" , \"probability\" : \"0.13336977\" , \"result\" : \"LESS_THAN_30_MINUTES\" , \"subType\" : \"flight-delay\" , \"type\" : \"prediction\" }, { \"id\" : \"TK1816NCEIST20200801\" , \"probability\" : \"0.42023364\" , \"result\" : \"BETWEEN_30_AND_60_MINUTES\" , \"subType\" : \"flight-delay\" , \"type\" : \"prediction\" }, { \"id\" : \"TK1816NCEIST20200801\" , \"probability\" : \"0.34671372\" , \"result\" : \"BETWEEN_60_AND_120_MINUTES\" , \"subType\" : \"flight-delay\" , \"type\" : \"prediction\" }, { \"id\" : \"TK1816NCEIST20200801\" , \"probability\" : \"0.09968289\" , \"result\" : \"OVER_120_MINUTES_OR_CANCELLED\" , \"subType\" : \"flight-delay\" , \"type\" : \"prediction\" } ] As you can see, the algorithm returns a 42.7% chance of a two-hour delay or eventual cancellation. Knowing this now, would you still make the decision to book the flight? We created this API because we want to empower travelers to make that choice.","title":"Flight Delay Prediction API"},{"location":"resources/predictions/#airport-on-time-performance","text":"The Airport On-Time Performance API estimates the percentage of an airport\u2019s flights that will leave on time. We\u2019ve harnessed Amadeus historical data to predict the best airports for an speedy, stress-free flight. Give users meaningful context and empower them to make better choices about connecting flights and departure airports.","title":"Airport On-Time Performance"},{"location":"resources/predictions/#trip-purpose-prediction","text":"The Trip Purpose Prediction API predicts whether a flight search is for business or leisure. Our machine-learning models have detected which patterns of departure and arrival cities, flight dates and search dates are associated with business trips and leisure trips. Understand why your users and traveling and show them the flights, fares and ancillaries that suit them best.","title":"Trip Purpose Prediction"},{"location":"sdks/java-sdk/","text":"Java SDK Java usually refers to the programming language but also to the platform: a set of tools -virtual machine, compiler and libraries- which allow developers to create cross-platform applications. OpenJDK? Oracle JDK? help! Despite the complexity of the Java ecosystem, it's important to understand that there is only one set of source code for the JDK released under GPL license and hosted at OpenJDK . You can always follow these instructions to compile and generate your own JDK flavor. Different vendors build the OpenJDK adding additional tools, utilities or branding elements, but never modifying the language. As result the vendor provides a new build with some unique vendor capabilities or certification processes. There are many JDK implementations out there, but the most used ones are: OpenJDK . Oracle GPL license unbranded builds of the OpenJDK. Oracle JDK . Branded builds from Oracle that could be used without cost. There are more implementations like Zulu , IBM JDK , Red Hat or AdoptOpenJDK . If you want to switch seamessly between flavors and versions, we recommend you to take a look to the sdkman tool. Installation The SDK can be installed by adding a Gradle dependency or Maven dependency, or by cloning the source into a project. Additionally it can be installed by downloading one of the precompiled JARs from the releases page on GitHub . Maven <dependency> <groupId> com.amadeus </groupId> <artifactId> amadeus-java </artifactId> <version> 3.3.0 </version> </dependency> Gradle compile \"com.amadeus:amadeus-java:3.3.0\" Setting up the environment Java JDK Installation Linux / Windows Go to AdoptOpenJDK website and download the tarball (Version 8 at the time of writting this). Make sure the new Java installation is the default Java in your system: Extract the .tar.gz . Add bin directory to your PATH environment. Export a new JAVA_HOME environment variable pointing to the directory where Java has been installed. Check that Java has installed correctly java -version Information On Linux, use update-alternatives --config java whenever is possible. macOS We recommend to use brew if possible. If you haven't installed brew already install it! Then install Java as follows: brew cask uninstall java brew tap adoptopenjdk/openjdk brew cask install adoptopenjdk8 Gradle Managing a Java project and its dependencies manually could be an exhausting task if you don't use the proper tools or IDEs (Eclipse, NetBeans, IntelliJ...). This tutorial is meant to be followed using command line. This will give us a better understanding about what's going on beneath any IDE. There are several tools which makes us life eaiser. The most interesting ones are Gradle and maven . Although our Java SDK supports both Gradle and maven , for our example we are going to use Gradle . Let's see how it works. Installation Go ahead and install Gradle following the instructions from the website. Make sure the gradle tool belongs to your PATH variable. To test the Gradle installation, run gradle from the command line: gradle Welcome to Gradle 4.10.2! Here are the highlights of this release: - Incremental Java compilation by default - Periodic Gradle caches cleanup - Gradle Kotlin DSL 1.0-RC6 - Nested included builds - SNAPSHOT plugin versions in the `plugins {}` block For more details see https://docs.gradle.org/4.10.2/release-notes.html Step-by-step example This tutorial will guide you through the process of creating a simple Java application which calls the Flight Inspiration Search API using the Amadeus for Developers Java SDK Using the Amadeus Java SDK For this tutorial we will use Unix-based commands. Windows has similar commands for each. The requirements to follow this tutorial are the following: Your favorite editor Java correctly installed (see previous section) gradle Amadeus for Developers API key Let's do something cool by calling one of our Flight Search APIs from your Java code. Let's start by creating a new folder AmadeusTest on your $HOME directory. Switch to this new folder and create a subdirectory structure that will host our project: mkdir -p src/main/java/flightsearch Create a new file called FlightSearch.java inside src/main/java/flightsearch with the following content: package flightsearch ; public class FlightSearch { public static void main ( String [] args ) { System . out . println ( \"Hello World\" ); } } Go back to the root folder AmadeusTest and initialize your project using gradle : gradle init You'll notice a few new files in your root folder. You can freely add them to your version control system so everyone can build it just the same way. Edit the build.gradle file with your favorite editor and add: apply plugin : ' java ' apply plugin : ' application ' mainClassName = ' flightsearch . FlightSearch ' Note that mainClassName must be fully qualified class name. Let's build and run the source using the gradlew wrapper script that Gradle has just created: ./gradlew run > Task :run Hello World BUILD SUCCESSFUL in 2s 2 actionable tasks: 2 executed The run argument is a task. Each project includes a collection of tasks, each of which performs a basic operation. Gradle comes with a set of predefined tasks that could be extended using an API. Managing tasks is out of the scope of this tutorial, but you can find more information about how to extend and configure tasks on Gradle documentation . Information Note that a new folder build/libs has been created containing the jar file of your project. Now that we have our skeleton ready, let's extend it to implement a call to the Flight Inspiration Search API . According to the Java SDK documentation, we need to update our build.gradle file to include the following dependencies: compile ' com . google . code . gson : gson : 2.8.5 ' compile \"com.amadeus:amadeus-java:3.3.0\" Our build.gradle will look like: apply plugin : ' java ' apply plugin : ' application ' sourceCompatibility = 1.8 targetCompatibility = 1.8 dependencies { compile ' com . google . code . gson : gson : 2.8.5 ' compile ' com . amadeus : amadeus - java : 3.3.0 ' } repositories { maven { url \"https://jcenter.bintray.com\" } } jar { baseName = ' flightSearch ' version = ' 0.1.0 ' } mainClassName = ' flightsearch . FlightSearch ' Note that we have added repositories section in order to retrieve the jar files automatically during the build task. It's time to call the APIs from our Java sample! Edit the FlightSearch.java file and add the necessary imports: import com.amadeus.Amadeus ; import com.amadeus.Params ; import com.amadeus.exceptions.ResponseException ; import com.amadeus.shopping.FlightDestinations ; import com.amadeus.resources.FlightDestination ; Add the SDK initialization right after the main class replacing \" CLIENT_ID \" and \" CLIENT_SECRET \" with the real values of your client id and client secret : Amadeus amadeus = Amadeus . builder ( \"CLIENT_ID\" , \"CLIENT_SECRET\" ) . build (); Finally call the API and print out the first result of the . This call will retrieve the best offers departuring from Madrid as of today. See how the get method of flightDestinations object returns a list of FlightDestination objects: FlightDestination [] flightDestinations = amadeus . shopping . flightDestinations . get ( Params . with ( \"origin\" , \"MAD\" ) ); The complete sample file looks like this: import com.amadeus.Amadeus ; import com.amadeus.Params ; import com.amadeus.exceptions.ResponseException ; import com.amadeus.shopping.FlightDestinations ; import com.amadeus.resources.FlightDestination ; public class FlightSearch { public static void main ( String [] args ) throws ResponseException { Amadeus amadeus = Amadeus . builder ( \"CLIENT_ID\" , \"CLIENT_SECRET\" ) . build (); FlightDestination [] flightDestinations = amadeus . shopping . flightDestinations . get ( Params . with ( \"origin\" , \"MAD\" )); if ( flightDestinations [ 0 ] . getResponse (). getStatusCode () != 200 ) { System . out . println ( \"Wrong status code for Flight Inspiration Search: \" + flightDestinations [ 0 ] . getResponse (). getStatusCode ()); System . exit ( - 1 ); } System . out . println ( flightDestinations [ 0 ] ); } } Let's build and run the code to see that everything is working properly (the output has been splitted into different lines for clarity): ./gradlew run > Task :run FlightDestination ( type = flight-destination, origin = MAD, destination = BIO, departureDate = Sat Nov 17 00 :00:00 CET 2018 , returnDate = Wed Nov 21 00 :00:00 CET 2018 , price = FlightDestination.Price ( total = 92 .26 ))","title":"Java SDK"},{"location":"sdks/java-sdk/#java-sdk","text":"Java usually refers to the programming language but also to the platform: a set of tools -virtual machine, compiler and libraries- which allow developers to create cross-platform applications.","title":"Java SDK"},{"location":"sdks/java-sdk/#openjdk-oracle-jdk-help","text":"Despite the complexity of the Java ecosystem, it's important to understand that there is only one set of source code for the JDK released under GPL license and hosted at OpenJDK . You can always follow these instructions to compile and generate your own JDK flavor. Different vendors build the OpenJDK adding additional tools, utilities or branding elements, but never modifying the language. As result the vendor provides a new build with some unique vendor capabilities or certification processes. There are many JDK implementations out there, but the most used ones are: OpenJDK . Oracle GPL license unbranded builds of the OpenJDK. Oracle JDK . Branded builds from Oracle that could be used without cost. There are more implementations like Zulu , IBM JDK , Red Hat or AdoptOpenJDK . If you want to switch seamessly between flavors and versions, we recommend you to take a look to the sdkman tool.","title":"OpenJDK? Oracle JDK? help!"},{"location":"sdks/java-sdk/#installation","text":"The SDK can be installed by adding a Gradle dependency or Maven dependency, or by cloning the source into a project. Additionally it can be installed by downloading one of the precompiled JARs from the releases page on GitHub .","title":"Installation"},{"location":"sdks/java-sdk/#maven","text":"<dependency> <groupId> com.amadeus </groupId> <artifactId> amadeus-java </artifactId> <version> 3.3.0 </version> </dependency>","title":"Maven"},{"location":"sdks/java-sdk/#gradle","text":"compile \"com.amadeus:amadeus-java:3.3.0\"","title":"Gradle"},{"location":"sdks/java-sdk/#setting-up-the-environment","text":"","title":"Setting up the environment"},{"location":"sdks/java-sdk/#java-jdk-installation","text":"","title":"Java JDK Installation"},{"location":"sdks/java-sdk/#linux-windows","text":"Go to AdoptOpenJDK website and download the tarball (Version 8 at the time of writting this). Make sure the new Java installation is the default Java in your system: Extract the .tar.gz . Add bin directory to your PATH environment. Export a new JAVA_HOME environment variable pointing to the directory where Java has been installed. Check that Java has installed correctly java -version Information On Linux, use update-alternatives --config java whenever is possible.","title":"Linux / Windows"},{"location":"sdks/java-sdk/#macos","text":"We recommend to use brew if possible. If you haven't installed brew already install it! Then install Java as follows: brew cask uninstall java brew tap adoptopenjdk/openjdk brew cask install adoptopenjdk8","title":"macOS"},{"location":"sdks/java-sdk/#gradle_1","text":"Managing a Java project and its dependencies manually could be an exhausting task if you don't use the proper tools or IDEs (Eclipse, NetBeans, IntelliJ...). This tutorial is meant to be followed using command line. This will give us a better understanding about what's going on beneath any IDE. There are several tools which makes us life eaiser. The most interesting ones are Gradle and maven . Although our Java SDK supports both Gradle and maven , for our example we are going to use Gradle . Let's see how it works.","title":"Gradle"},{"location":"sdks/java-sdk/#installation_1","text":"Go ahead and install Gradle following the instructions from the website. Make sure the gradle tool belongs to your PATH variable. To test the Gradle installation, run gradle from the command line: gradle Welcome to Gradle 4.10.2! Here are the highlights of this release: - Incremental Java compilation by default - Periodic Gradle caches cleanup - Gradle Kotlin DSL 1.0-RC6 - Nested included builds - SNAPSHOT plugin versions in the `plugins {}` block For more details see https://docs.gradle.org/4.10.2/release-notes.html","title":"Installation"},{"location":"sdks/java-sdk/#step-by-step-example","text":"This tutorial will guide you through the process of creating a simple Java application which calls the Flight Inspiration Search API using the Amadeus for Developers Java SDK","title":"Step-by-step example"},{"location":"sdks/java-sdk/#using-the-amadeus-java-sdk","text":"For this tutorial we will use Unix-based commands. Windows has similar commands for each. The requirements to follow this tutorial are the following: Your favorite editor Java correctly installed (see previous section) gradle Amadeus for Developers API key Let's do something cool by calling one of our Flight Search APIs from your Java code. Let's start by creating a new folder AmadeusTest on your $HOME directory. Switch to this new folder and create a subdirectory structure that will host our project: mkdir -p src/main/java/flightsearch Create a new file called FlightSearch.java inside src/main/java/flightsearch with the following content: package flightsearch ; public class FlightSearch { public static void main ( String [] args ) { System . out . println ( \"Hello World\" ); } } Go back to the root folder AmadeusTest and initialize your project using gradle : gradle init You'll notice a few new files in your root folder. You can freely add them to your version control system so everyone can build it just the same way. Edit the build.gradle file with your favorite editor and add: apply plugin : ' java ' apply plugin : ' application ' mainClassName = ' flightsearch . FlightSearch ' Note that mainClassName must be fully qualified class name. Let's build and run the source using the gradlew wrapper script that Gradle has just created: ./gradlew run > Task :run Hello World BUILD SUCCESSFUL in 2s 2 actionable tasks: 2 executed The run argument is a task. Each project includes a collection of tasks, each of which performs a basic operation. Gradle comes with a set of predefined tasks that could be extended using an API. Managing tasks is out of the scope of this tutorial, but you can find more information about how to extend and configure tasks on Gradle documentation . Information Note that a new folder build/libs has been created containing the jar file of your project. Now that we have our skeleton ready, let's extend it to implement a call to the Flight Inspiration Search API . According to the Java SDK documentation, we need to update our build.gradle file to include the following dependencies: compile ' com . google . code . gson : gson : 2.8.5 ' compile \"com.amadeus:amadeus-java:3.3.0\" Our build.gradle will look like: apply plugin : ' java ' apply plugin : ' application ' sourceCompatibility = 1.8 targetCompatibility = 1.8 dependencies { compile ' com . google . code . gson : gson : 2.8.5 ' compile ' com . amadeus : amadeus - java : 3.3.0 ' } repositories { maven { url \"https://jcenter.bintray.com\" } } jar { baseName = ' flightSearch ' version = ' 0.1.0 ' } mainClassName = ' flightsearch . FlightSearch ' Note that we have added repositories section in order to retrieve the jar files automatically during the build task. It's time to call the APIs from our Java sample! Edit the FlightSearch.java file and add the necessary imports: import com.amadeus.Amadeus ; import com.amadeus.Params ; import com.amadeus.exceptions.ResponseException ; import com.amadeus.shopping.FlightDestinations ; import com.amadeus.resources.FlightDestination ; Add the SDK initialization right after the main class replacing \" CLIENT_ID \" and \" CLIENT_SECRET \" with the real values of your client id and client secret : Amadeus amadeus = Amadeus . builder ( \"CLIENT_ID\" , \"CLIENT_SECRET\" ) . build (); Finally call the API and print out the first result of the . This call will retrieve the best offers departuring from Madrid as of today. See how the get method of flightDestinations object returns a list of FlightDestination objects: FlightDestination [] flightDestinations = amadeus . shopping . flightDestinations . get ( Params . with ( \"origin\" , \"MAD\" ) ); The complete sample file looks like this: import com.amadeus.Amadeus ; import com.amadeus.Params ; import com.amadeus.exceptions.ResponseException ; import com.amadeus.shopping.FlightDestinations ; import com.amadeus.resources.FlightDestination ; public class FlightSearch { public static void main ( String [] args ) throws ResponseException { Amadeus amadeus = Amadeus . builder ( \"CLIENT_ID\" , \"CLIENT_SECRET\" ) . build (); FlightDestination [] flightDestinations = amadeus . shopping . flightDestinations . get ( Params . with ( \"origin\" , \"MAD\" )); if ( flightDestinations [ 0 ] . getResponse (). getStatusCode () != 200 ) { System . out . println ( \"Wrong status code for Flight Inspiration Search: \" + flightDestinations [ 0 ] . getResponse (). getStatusCode ()); System . exit ( - 1 ); } System . out . println ( flightDestinations [ 0 ] ); } } Let's build and run the code to see that everything is working properly (the output has been splitted into different lines for clarity): ./gradlew run > Task :run FlightDestination ( type = flight-destination, origin = MAD, destination = BIO, departureDate = Sat Nov 17 00 :00:00 CET 2018 , returnDate = Wed Nov 21 00 :00:00 CET 2018 , price = FlightDestination.Price ( total = 92 .26 ))","title":"Using the Amadeus Java SDK"},{"location":"sdks/node-sdk/","text":"Node SDK Installation This module has been tested using Node 6 and higher, though it should work with Node 4 and 5 as well. You can install it using Yarn or NPM. npm install amadeus --save Getting Started To make your first API call, you will need to register for an Amadeus Developer Account and set up your first application . var Amadeus = require ( 'amadeus' ); var amadeus = new Amadeus ({ clientId : 'REPLACE_BY_YOUR_API_KEY' , clientSecret : 'REPLACE_BY_YOUR_API_SECRET' }); amadeus . shopping . flightOffersSearch . get ({ originLocationCode : 'SYD' , destinationLocationCode : 'BKK' , departureDate : '2020-08-01' , adults : '2' }). then ( function ( response ){ console . log ( response . data ); }). catch ( function ( responseError ){ console . log ( responseError . code ); }); Initialization The client can be initialized directly. // Initialize using parameters var amadeus = new Amadeus ({ clientId : 'REPLACE_BY_YOUR_API_KEY' , clientSecret : 'REPLACE_BY_YOUR_API_SECRET' }); Alternatively, it can be initialized without any parameters if the environment variables AMADEUS_CLIENT_ID and AMADEUS_CLIENT_SECRET are present. var amadeus = new Amadeus (); Your credentials can be found on the Amadeus dashboard . By default, the SDK environment is set to test environment. To switch to a production (pay-as-you-go) environment, please switch the hostname as follows: var amadeus = new Amadeus ({ hostname : 'production' }); Promises Every API call returns a Promise that either resolves or rejects. Every resolved API call returns a Response object containing a body attribute with the raw response. If the API call contained a JSON response, it will parse the JSON into the result attribute. If this data contains a data key, that will be made available in data attribute. For a failed API call, it returns a ResponseError object containing the (parsed or unparsed) response, the request, and an error code. amadeus . referenceData . urls . checkinLinks . get ({ airlineCode : 'BA' }). then ( function ( response ){ console . log ( response . body ); //=> The raw body console . log ( response . result ); //=> The fully parsed result console . log ( response . data ); //=> The data attribute taken from the result }). catch ( function ( error ){ console . log ( error . response ); //=> The response object with (un)parsed data console . log ( error . response . request ); //=> The details of the request made console . log ( error . code ); //=> A unique error code to identify the type of error }); Pagination If an API endpoint supports pagination, the other pages are available under the .next , .previous , .last and .first methods. amadeus . referenceData . locations . get ({ keyword : 'LON' , subType : 'AIRPORT,CITY' }). then ( function ( response ){ console . log ( response . data ); // first page return amadeus . next ( response ); }). then ( function ( nextResponse ){ console . log ( nextResponse . data ); // second page }); If a page is not available, the response will resolve to null .","title":"Node SDK"},{"location":"sdks/node-sdk/#node-sdk","text":"","title":"Node SDK"},{"location":"sdks/node-sdk/#installation","text":"This module has been tested using Node 6 and higher, though it should work with Node 4 and 5 as well. You can install it using Yarn or NPM. npm install amadeus --save","title":"Installation"},{"location":"sdks/node-sdk/#getting-started","text":"To make your first API call, you will need to register for an Amadeus Developer Account and set up your first application . var Amadeus = require ( 'amadeus' ); var amadeus = new Amadeus ({ clientId : 'REPLACE_BY_YOUR_API_KEY' , clientSecret : 'REPLACE_BY_YOUR_API_SECRET' }); amadeus . shopping . flightOffersSearch . get ({ originLocationCode : 'SYD' , destinationLocationCode : 'BKK' , departureDate : '2020-08-01' , adults : '2' }). then ( function ( response ){ console . log ( response . data ); }). catch ( function ( responseError ){ console . log ( responseError . code ); });","title":"Getting Started"},{"location":"sdks/node-sdk/#initialization","text":"The client can be initialized directly. // Initialize using parameters var amadeus = new Amadeus ({ clientId : 'REPLACE_BY_YOUR_API_KEY' , clientSecret : 'REPLACE_BY_YOUR_API_SECRET' }); Alternatively, it can be initialized without any parameters if the environment variables AMADEUS_CLIENT_ID and AMADEUS_CLIENT_SECRET are present. var amadeus = new Amadeus (); Your credentials can be found on the Amadeus dashboard . By default, the SDK environment is set to test environment. To switch to a production (pay-as-you-go) environment, please switch the hostname as follows: var amadeus = new Amadeus ({ hostname : 'production' });","title":"Initialization"},{"location":"sdks/node-sdk/#promises","text":"Every API call returns a Promise that either resolves or rejects. Every resolved API call returns a Response object containing a body attribute with the raw response. If the API call contained a JSON response, it will parse the JSON into the result attribute. If this data contains a data key, that will be made available in data attribute. For a failed API call, it returns a ResponseError object containing the (parsed or unparsed) response, the request, and an error code. amadeus . referenceData . urls . checkinLinks . get ({ airlineCode : 'BA' }). then ( function ( response ){ console . log ( response . body ); //=> The raw body console . log ( response . result ); //=> The fully parsed result console . log ( response . data ); //=> The data attribute taken from the result }). catch ( function ( error ){ console . log ( error . response ); //=> The response object with (un)parsed data console . log ( error . response . request ); //=> The details of the request made console . log ( error . code ); //=> A unique error code to identify the type of error });","title":"Promises"},{"location":"sdks/node-sdk/#pagination","text":"If an API endpoint supports pagination, the other pages are available under the .next , .previous , .last and .first methods. amadeus . referenceData . locations . get ({ keyword : 'LON' , subType : 'AIRPORT,CITY' }). then ( function ( response ){ console . log ( response . data ); // first page return amadeus . next ( response ); }). then ( function ( nextResponse ){ console . log ( nextResponse . data ); // second page }); If a page is not available, the response will resolve to null .","title":"Pagination"},{"location":"sdks/python-sdk/","text":"Python SDK Installation The Python SDK has been uploaded to the official Python package repository , which makes life easier since you can install the SDK as a regular Python package. Information Although the SDK works fine with Python 2.7 or 3.4+, we recommend using 3.5 or higher if possible. It is highly recommended to use virtualenv when installing packages for your local projects. There are several beneficts of creating isolated environment, but the most interesting one is to avoid conflicts between different versions of the same package. The tool can be easily installed using pip : pip install virtualenv Next step is to create the environment. Switch to your project repository and type: virtualenv venv A new folder venv will be created with everything necessary inside. Let's activate the isolated environment with the following command: source venv/bin/activate From now on, all packages installed using pip will be located under venv/lib and not on your global /usr/lib folder. Finally, install the Amadeus SDK as follows: pip install amadeus You can also add it to your requirements.txt file and install using: pip install -r requirements.txt The virtual environment can be disabled by typing: deactivate Set up the environment Managing several Python versions locally could be a real pain. This guide explains how to manage our environment to easily switch between different Python versions using pyenv. Why Use pyenv ? pyenv is a wonderful tool for managing multiple Python versions. Even if you already have Python installed on your system, it is worth having pyenv installed so that you can easily try out new language features or help contribute to a project that is on a different version of Python. You can find more information on the GitHub project repository. Installation Installation couldn't be easier: curl https://pyenv.run | bash This will install pyenv along with a few plugins that are useful: yenv : The actual pyenv application pyenv-virtualenv : Plugin for pyenv and virtual environments pyenv-update : Plugin for updating pyenv pyenv-doctor : Plugin to verify that pyenv and build dependencies are installed pyenv-which-ext : Plugin to automatically lookup system commands Add the following lines to your .bashrc or .zshrc files: export PATH=\"$HOME/.pyenv/bin:$PATH\" eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\" Basic Usage pyenv allows to install both specific version per project and a global one. Let's install a global Python 3.6 version: pyenv install 3.6.8 You can check the available versions using the following command: pyenv install --list Finally, check that the new version has been installed correctly: python --version Python 3.6.8 Step-by-Step example This tutorial will guide you through the process of creating a simple Python application which calls the Flight Inspiration Search API using the Amadeus for Developers Python SDK Requests 1 2 3 4 5 6 7 8 9 10 11 12 13 14 `` ` python from amadeus import Client , ResponseError client = Client ( client_id = 'REPLACE_BY_YOUR_API_KEY' , client_secret = 'REPLACE_BY_YOUR_API_SECRET' ) try : response = client . shopping . flight_destinations . get ( origin = 'MAD' ) print ( response . data ) except ResponseError as error : print ( error ) `` ` Pretty printing the response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 `` ` python from amadeus import Client , ResponseError import json client = Client ( client_id = 'REPLACE_BY_YOUR_API_KEY' , client_secret = 'REPLACE_BY_YOUR_API_SECRET' ) try : response = client . shopping . flight_destinations . get ( origin = 'MAD' ) print ( json . dumps ( response . data ), ident = 4 ) except ResponseError as error : print ( error ) `` `","title":"Python SDK"},{"location":"sdks/python-sdk/#python-sdk","text":"","title":"Python SDK"},{"location":"sdks/python-sdk/#installation","text":"The Python SDK has been uploaded to the official Python package repository , which makes life easier since you can install the SDK as a regular Python package. Information Although the SDK works fine with Python 2.7 or 3.4+, we recommend using 3.5 or higher if possible. It is highly recommended to use virtualenv when installing packages for your local projects. There are several beneficts of creating isolated environment, but the most interesting one is to avoid conflicts between different versions of the same package. The tool can be easily installed using pip : pip install virtualenv Next step is to create the environment. Switch to your project repository and type: virtualenv venv A new folder venv will be created with everything necessary inside. Let's activate the isolated environment with the following command: source venv/bin/activate From now on, all packages installed using pip will be located under venv/lib and not on your global /usr/lib folder. Finally, install the Amadeus SDK as follows: pip install amadeus You can also add it to your requirements.txt file and install using: pip install -r requirements.txt The virtual environment can be disabled by typing: deactivate","title":"Installation"},{"location":"sdks/python-sdk/#set-up-the-environment","text":"Managing several Python versions locally could be a real pain. This guide explains how to manage our environment to easily switch between different Python versions using pyenv.","title":"Set up the environment"},{"location":"sdks/python-sdk/#why-use-pyenv","text":"pyenv is a wonderful tool for managing multiple Python versions. Even if you already have Python installed on your system, it is worth having pyenv installed so that you can easily try out new language features or help contribute to a project that is on a different version of Python. You can find more information on the GitHub project repository.","title":"Why Use pyenv?"},{"location":"sdks/python-sdk/#installation_1","text":"Installation couldn't be easier: curl https://pyenv.run | bash This will install pyenv along with a few plugins that are useful: yenv : The actual pyenv application pyenv-virtualenv : Plugin for pyenv and virtual environments pyenv-update : Plugin for updating pyenv pyenv-doctor : Plugin to verify that pyenv and build dependencies are installed pyenv-which-ext : Plugin to automatically lookup system commands Add the following lines to your .bashrc or .zshrc files: export PATH=\"$HOME/.pyenv/bin:$PATH\" eval \"$(pyenv init -)\" eval \"$(pyenv virtualenv-init -)\"","title":"Installation"},{"location":"sdks/python-sdk/#basic-usage","text":"pyenv allows to install both specific version per project and a global one. Let's install a global Python 3.6 version: pyenv install 3.6.8 You can check the available versions using the following command: pyenv install --list Finally, check that the new version has been installed correctly: python --version Python 3.6.8","title":"Basic Usage"},{"location":"sdks/python-sdk/#step-by-step-example","text":"This tutorial will guide you through the process of creating a simple Python application which calls the Flight Inspiration Search API using the Amadeus for Developers Python SDK","title":"Step-by-Step example"},{"location":"sdks/python-sdk/#requests","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 `` ` python from amadeus import Client , ResponseError client = Client ( client_id = 'REPLACE_BY_YOUR_API_KEY' , client_secret = 'REPLACE_BY_YOUR_API_SECRET' ) try : response = client . shopping . flight_destinations . get ( origin = 'MAD' ) print ( response . data ) except ResponseError as error : print ( error ) `` `","title":"Requests"},{"location":"sdks/python-sdk/#pretty-printing-the-response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 `` ` python from amadeus import Client , ResponseError import json client = Client ( client_id = 'REPLACE_BY_YOUR_API_KEY' , client_secret = 'REPLACE_BY_YOUR_API_SECRET' ) try : response = client . shopping . flight_destinations . get ( origin = 'MAD' ) print ( json . dumps ( response . data ), ident = 4 ) except ResponseError as error : print ( error ) `` `","title":"Pretty printing the response"}]}